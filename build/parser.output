Terminales no usados en la gramática

    TOKEN_DBYTE
    TOKEN_DSHORT
    TOKEN_DLONG


La regla es inútil debido a los conflictos

   27 instruccion: error '}'


Estado 11 conflictos: 1 desplazamiento/reducción
Estado 65 conflictos: 40 reducción/reducción
Estado 101 conflictos: 1 desplazamiento/reducción
Estado 202 conflictos: 78 reducción/reducción
Estado 204 conflictos: 40 reducción/reducción
Estado 267 conflictos: 1 desplazamiento/reducción
Estado 298 conflictos: 1 desplazamiento/reducción


Gramática

    0 $accept: s $end

    1 s: lSentencia

    2 lSentencia: lSentencia instruccion
    3           | lSentencia comentario
    4           | instruccion
    5           | lSentencia error '}'
    6           | error '}'

    7 comentario: TOKEN_COMMENT_LINE
    8           | TOKEN_COMMENT_MULTI

    9 instruccion: if_statement
   10            | switch_statement
   11            | break_statement
   12            | while_statement
   13            | for_statement
   14            | for_each_statement
   15            | repeat_statement
   16            | imprimir ';'
   17            | bloque
   18            | declaracion_var ';'
   19            | funcion_declaracion
   20            | main_declaracion
   21            | return_stmt ';'
   22            | asignacion ';'
   23            | asignacion_elemento ';'
   24            | postfix ';'
   25            | continue_statement
   26            | error ';'
   27            | error '}'

   28 if_statement: TOKEN_IF '(' expr ')' bloque
   29             | TOKEN_IF '(' expr ')' bloque TOKEN_ELSE bloque
   30             | TOKEN_IF '(' expr ')' bloque TOKEN_ELSE if_statement
   31             | TOKEN_IF '(' expr ')' instruccion_simple ';'
   32             | TOKEN_IF '(' expr ')' instruccion_simple ';' TOKEN_ELSE bloque
   33             | TOKEN_IF '(' expr ')' instruccion_simple ';' TOKEN_ELSE if_statement

   34 switch_statement: TOKEN_SWITCH '(' expr ')' '{' case_list '}'
   35                 | TOKEN_SWITCH '(' expr ')' '{' case_list default_case '}'

   36 while_statement: TOKEN_WHILE '(' expr ')' bloque
   37                | TOKEN_WHILE '(' expr ')' instruccion_simple

   38 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' incremento ')' bloque_for
   39              | TOKEN_FOR '(' declaracion_var ';' expr ';' incremento ')' instruccion_simple
   40              | TOKEN_FOR '(' declaracion_var ';' expr ';' ')' bloque_for
   41              | TOKEN_FOR '(' declaracion_var ';' expr ';' ')' instruccion_simple
   42              | TOKEN_FOR '(' asignacion ';' expr ';' incremento ')' bloque
   43              | TOKEN_FOR '(' asignacion ';' expr ';' incremento ')' instruccion_simple

   44 repeat_statement: TOKEN_REPEAT expr bloque_for

   45 incremento: asignacion
   46           | TOKEN_IDENTIFIER TOKEN_PLUS_PLUS
   47           | TOKEN_IDENTIFIER TOKEN_MINUS_MINUS

   48 case_list: case_item
   49          | case_list case_item

   50 case_labels: TOKEN_CASE expr ':'
   51            | case_labels TOKEN_CASE expr ':'

   52 case_item: case_labels instrucciones_case
   53          | case_labels instrucciones_case TOKEN_BREAK ';'

   54 instrucciones_case: instruccion_case
   55                   | instrucciones_case instruccion_case

   56 instruccion_case: imprimir ';'
   57                 | bloque
   58                 | declaracion_var ';'
   59                 | asignacion ';'

   60 default_case: TOKEN_DEFAULT ':' instrucciones_case
   61             | TOKEN_DEFAULT ':' instrucciones_case TOKEN_BREAK ';'

   62 break_statement: TOKEN_BREAK ';'

   63 continue_statement: TOKEN_CONTINUE ';'

   64 instruccion_simple: imprimir
   65                   | declaracion_var
   66                   | asignacion

   67 asignacion: TOKEN_IDENTIFIER '=' expr
   68           | TOKEN_IDENTIFIER TOKEN_PLUS_ASSIGN expr
   69           | TOKEN_IDENTIFIER TOKEN_MINUS_ASSIGN expr
   70           | TOKEN_IDENTIFIER TOKEN_MUL_ASSIGN expr
   71           | TOKEN_IDENTIFIER TOKEN_DIV_ASSIGN expr
   72           | TOKEN_IDENTIFIER TOKEN_MOD_ASSIGN expr
   73           | TOKEN_IDENTIFIER TOKEN_AND_ASSIGN expr
   74           | TOKEN_IDENTIFIER TOKEN_OR_ASSIGN expr
   75           | TOKEN_IDENTIFIER TOKEN_XOR_ASSIGN expr
   76           | TOKEN_IDENTIFIER TOKEN_SHL_ASSIGN expr
   77           | TOKEN_IDENTIFIER TOKEN_SHR_ASSIGN expr

   78 lista_Expr: lista_Expr ',' expr
   79           | expr

   80 imprimir: TOKEN_PRINT '(' lista_Expr ')'
   81         | TOKEN_SYSTEM_OUT_PRINTLN '(' lista_Expr ')'
   82         | TOKEN_SYSTEM_OUT_PRINTLN '(' ')'
   83         | TOKEN_SYSTEM_OUT_PRINT '(' lista_Expr ')'
   84         | TOKEN_SYSTEM_OUT_PRINT '(' ')'

   85 bloque: '{' lSentencia '}'
   86       | '{' error '}'

   87 bloque_for: '{' lSentencia '}'

   88 declaracion_var: array_decl_local
   89                | var_decl
   90                | final_var_decl

   91 array_decl_local: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' TOKEN_NEW tipoPrimitivo dims_expr_list
   92                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' '{' lista_Expr '}'
   93                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' bloque2D
   94                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' '{' lista_bloques2D '}'
   95                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' expr

   96 brackets_seq: '[' ']'
   97             | brackets_seq '[' ']'

   98 var_decl: tipoPrimitivo TOKEN_IDENTIFIER '=' expr
   99         | tipoPrimitivo TOKEN_IDENTIFIER

  100 final_var_decl: TOKEN_FINAL tipoPrimitivo TOKEN_IDENTIFIER '=' expr

  101 dims_expr_list: '[' expr ']'
  102               | dims_expr_list '[' expr ']'

  103 lista_bloques2D: bloque2D
  104                | lista_bloques2D ',' bloque2D

  105 bloque2D: '{' filas_lista '}'

  106 filas_lista: fila_matriz
  107            | filas_lista ',' fila_matriz

  108 fila_matriz: '{' lista_Expr '}'

  109 asignacion_elemento: TOKEN_IDENTIFIER indices_una '=' expr
  110                    | TOKEN_IDENTIFIER indices_multi '=' expr
  111                    | TOKEN_IDENTIFIER indices_una TOKEN_PLUS_ASSIGN expr
  112                    | TOKEN_IDENTIFIER indices_una TOKEN_MINUS_ASSIGN expr
  113                    | TOKEN_IDENTIFIER indices_una TOKEN_MUL_ASSIGN expr
  114                    | TOKEN_IDENTIFIER indices_una TOKEN_DIV_ASSIGN expr
  115                    | TOKEN_IDENTIFIER indices_una TOKEN_MOD_ASSIGN expr
  116                    | TOKEN_IDENTIFIER indices_multi TOKEN_PLUS_ASSIGN expr
  117                    | TOKEN_IDENTIFIER indices_multi TOKEN_MINUS_ASSIGN expr
  118                    | TOKEN_IDENTIFIER indices_multi TOKEN_MUL_ASSIGN expr
  119                    | TOKEN_IDENTIFIER indices_multi TOKEN_DIV_ASSIGN expr
  120                    | TOKEN_IDENTIFIER indices_multi TOKEN_MOD_ASSIGN expr

  121 indices_una: '[' expr ']'

  122 indices_multi: indices_una indices_una
  123              | indices_multi indices_una

  124 expr: expr '+' expr
  125     | expr '-' expr
  126     | expr '*' expr
  127     | expr '/' expr
  128     | expr '%' expr
  129     | expr '&' expr
  130     | expr '|' expr
  131     | expr '^' expr
  132     | expr TOKEN_SHIFT_LEFT expr
  133     | expr TOKEN_SHIFT_RIGHT expr
  134     | expr TOKEN_EQUAL expr
  135     | expr TOKEN_NOT_EQUAL expr
  136     | expr TOKEN_GREATER expr
  137     | expr TOKEN_LESS expr
  138     | expr TOKEN_GREATER_EQUAL expr
  139     | expr TOKEN_LESS_EQUAL expr
  140     | expr TOKEN_AND expr
  141     | expr TOKEN_OR expr
  142     | TOKEN_NOT expr
  143     | '-' expr
  144     | postfix

  145 postfix: unary
  146        | postfix '[' expr ']'
  147        | postfix '.' TOKEN_LENGTH
  148        | postfix '.' TOKEN_ADD '(' expr ')'
  149        | postfix '.' TOKEN_IDENTIFIER '(' expr ')'
  150        | postfix '.' TOKEN_IDENTIFIER '(' ')'
  151        | TOKEN_IDENTIFIER TOKEN_PLUS_PLUS
  152        | TOKEN_IDENTIFIER TOKEN_MINUS_MINUS

  153 unary: atom
  154      | '(' tipoPrimitivo ')' postfix

  155 atom: primitivo
  156     | '(' expr ')'
  157     | TOKEN_IDENTIFIER
  158     | llamada_funcion
  159     | TOKEN_ARRAYS '.' TOKEN_INDEXOF '(' expr ',' expr ')'
  160     | TOKEN_INTEGER_CLASS '.' TOKEN_PARSE_INT '(' expr ')'
  161     | TOKEN_DOUBLE_CLASS '.' TOKEN_PARSE_DOUBLE '(' expr ')'
  162     | TOKEN_FLOAT_CLASS '.' TOKEN_PARSE_FLOAT '(' expr ')'
  163     | TOKEN_DSTRING '.' TOKEN_VALUE_OF '(' expr ')'
  164     | TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' expr ')'
  165     | TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' join_variadic_args ')'

  166 join_variadic_args: expr ',' lista_Expr

  167 primitivo: TOKEN_UNSIGNED_INTEGER
  168          | TOKEN_STRING
  169          | TOKEN_REAL_FLOAT
  170          | TOKEN_REAL
  171          | TOKEN_CHAR_LITERAL
  172          | TOKEN_TRUE
  173          | TOKEN_FALSE
  174          | TOKEN_NULL

  175 tipoPrimitivo: TOKEN_DINT
  176              | TOKEN_DFLOAT
  177              | TOKEN_DDOUBLE
  178              | TOKEN_DSTRING
  179              | TOKEN_DBOOLEAN
  180              | TOKEN_DCHAR
  181              | TOKEN_DVOID

  182 funcion_declaracion: tipoPrimitivo TOKEN_IDENTIFIER '(' param_opt ')' bloque
  183                    | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '(' param_opt ')' bloque

  184 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC TOKEN_DVOID TOKEN_IDENTIFIER '(' main_params_opt ')' bloque

  185 main_params_opt: ε
  186                | main_params

  187 main_params: main_param
  188            | main_params ',' main_param

  189 main_param: tipoPrimitivo main_param_array_brackets TOKEN_IDENTIFIER

  190 main_param_array_brackets: ε
  191                          | main_param_array_brackets '[' ']'

  192 param_opt: ε
  193          | lista_parametros

  194 param_array_brackets: ε
  195                     | param_array_brackets '[' ']'

  196 lista_parametros: tipoPrimitivo param_array_brackets TOKEN_IDENTIFIER
  197                 | lista_parametros ',' tipoPrimitivo param_array_brackets TOKEN_IDENTIFIER

  198 return_stmt: TOKEN_RETURN
  199            | TOKEN_RETURN expr

  200 for_each_statement: TOKEN_FOR '(' tipoPrimitivo TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque
  201                   | TOKEN_FOR '(' tipoPrimitivo '[' ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque

  202 argumentos_opt: ε
  203               | lista_Expr

  204 llamada_funcion: TOKEN_IDENTIFIER '(' argumentos_opt ')'


Terminales con las reglas donde aparecen

    $end (0) 0
    '%' (37) 128
    '&' (38) 129
    '(' (40) 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 80 81 82 83 84 148 149 150 154 156 159 160 161 162 163 164 165 182 183 184 200 201 204
    ')' (41) 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 80 81 82 83 84 148 149 150 154 156 159 160 161 162 163 164 165 182 183 184 200 201 204
    '*' (42) 126
    '+' (43) 124
    ',' (44) 78 104 107 159 164 165 166 188 197
    '-' (45) 125 143
    '.' (46) 147 148 149 150 159 160 161 162 163 164 165
    '/' (47) 127
    ':' (58) 50 51 60 61 200 201
    ';' (59) 16 18 21 22 23 24 26 31 32 33 38 39 40 41 42 43 53 56 58 59 61 62 63
    '=' (61) 67 91 92 93 94 95 98 100 109 110
    '[' (91) 96 97 101 102 121 146 191 195 201
    ']' (93) 96 97 101 102 121 146 191 195 201
    '^' (94) 131
    '{' (123) 34 35 85 86 87 92 94 105 108
    '|' (124) 130
    '}' (125) 5 6 27 34 35 85 86 87 92 94 105 108
    error (256) 5 6 26 27 86
    TOKEN_PRINT <string> (258) 80
    TOKEN_DINT <string> (259) 175
    TOKEN_DFLOAT <string> (260) 176
    TOKEN_DBYTE <string> (261)
    TOKEN_DSHORT <string> (262)
    TOKEN_DLONG <string> (263)
    TOKEN_DDOUBLE <string> (264) 177
    TOKEN_DSTRING <string> (265) 163 164 165 178
    TOKEN_UNSIGNED_INTEGER <string> (266) 167
    TOKEN_REAL <string> (267) 170
    TOKEN_REAL_FLOAT <string> (268) 169
    TOKEN_STRING <string> (269) 168
    TOKEN_IDENTIFIER <string> (270) 46 47 67 68 69 70 71 72 73 74 75 76 77 91 92 93 94 95 98 99 100 109 110 111 112 113 114 115 116 117 118 119 120 149 150 151 152 157 182 183 184 189 196 197 200 201 204
    TOKEN_TRUE <string> (271) 172
    TOKEN_FALSE <string> (272) 173
    TOKEN_DBOOLEAN <string> (273) 179
    TOKEN_DCHAR <string> (274) 180
    TOKEN_CHAR_LITERAL <string> (275) 171
    TOKEN_FINAL <string> (276) 100
    TOKEN_SYSTEM_OUT_PRINTLN <string> (277) 81 82
    TOKEN_SYSTEM_OUT_PRINT <string> (278) 83 84
    TOKEN_DVOID <string> (279) 181 184
    TOKEN_COMMENT_LINE <string> (280) 7
    TOKEN_COMMENT_MULTI <string> (281) 8
    TOKEN_NULL (282) 174
    TOKEN_SHIFT_LEFT (283) 132
    TOKEN_SHIFT_RIGHT (284) 133
    TOKEN_INTEGER_CLASS (285) 160
    TOKEN_DOUBLE_CLASS (286) 161
    TOKEN_FLOAT_CLASS (287) 162
    TOKEN_ARRAYS (288) 159
    TOKEN_PARSE_INT (289) 160
    TOKEN_PARSE_DOUBLE (290) 161
    TOKEN_PARSE_FLOAT (291) 162
    TOKEN_VALUE_OF (292) 163
    TOKEN_JOIN (293) 164 165
    TOKEN_LENGTH (294) 147
    TOKEN_ADD (295) 148
    TOKEN_INDEXOF (296) 159
    TOKEN_PLUS_PLUS (297) 46 151
    TOKEN_MINUS_MINUS (298) 47 152
    TOKEN_PLUS_ASSIGN (299) 68 111 116
    TOKEN_MINUS_ASSIGN (300) 69 112 117
    TOKEN_MUL_ASSIGN (301) 70 113 118
    TOKEN_DIV_ASSIGN (302) 71 114 119
    TOKEN_MOD_ASSIGN (303) 72 115 120
    TOKEN_AND_ASSIGN (304) 73
    TOKEN_OR_ASSIGN (305) 74
    TOKEN_XOR_ASSIGN (306) 75
    TOKEN_SHL_ASSIGN (307) 76
    TOKEN_SHR_ASSIGN (308) 77
    TOKEN_EQUAL (309) 134
    TOKEN_NOT_EQUAL (310) 135
    TOKEN_GREATER (311) 136
    TOKEN_LESS (312) 137
    TOKEN_GREATER_EQUAL (313) 138
    TOKEN_LESS_EQUAL (314) 139
    TOKEN_AND (315) 140
    TOKEN_OR (316) 141
    TOKEN_NOT (317) 142
    TOKEN_IF (318) 28 29 30 31 32 33
    TOKEN_ELSE (319) 29 30 32 33
    TOKEN_SWITCH (320) 34 35
    TOKEN_CASE (321) 50 51
    TOKEN_DEFAULT (322) 60 61
    TOKEN_BREAK (323) 53 61 62
    TOKEN_WHILE (324) 36 37
    TOKEN_FOR (325) 38 39 40 41 42 43 200 201
    TOKEN_CONTINUE (326) 63
    TOKEN_NEW (327) 91
    TOKEN_RETURN (328) 198 199
    TOKEN_PUBLIC (329) 184
    TOKEN_STATIC (330) 184
    TOKEN_REPEAT (331) 44
    NEG (332)
    CAST (333)


No terminales con las reglas donde aparecen

    $accept (98)
        on left: 0
    s <nodo> (99)
        on left: 1
        on right: 0
    lSentencia <nodo> (100)
        on left: 2 3 4 5 6
        on right: 1 2 3 5 85 87
    comentario (101)
        on left: 7 8
        on right: 3
    instruccion <nodo> (102)
        on left: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
        on right: 2 4
    if_statement <nodo> (103)
        on left: 28 29 30 31 32 33
        on right: 9 30 33
    switch_statement <nodo> (104)
        on left: 34 35
        on right: 10
    while_statement <nodo> (105)
        on left: 36 37
        on right: 12
    for_statement <nodo> (106)
        on left: 38 39 40 41 42 43
        on right: 13
    repeat_statement <nodo> (107)
        on left: 44
        on right: 15
    incremento <nodo> (108)
        on left: 45 46 47
        on right: 38 39 42 43
    case_list <nodo> (109)
        on left: 48 49
        on right: 34 35 49
    case_labels <nodo> (110)
        on left: 50 51
        on right: 51 52 53
    case_item <nodo> (111)
        on left: 52 53
        on right: 48 49
    instrucciones_case <nodo> (112)
        on left: 54 55
        on right: 52 53 55 60 61
    instruccion_case <nodo> (113)
        on left: 56 57 58 59
        on right: 54 55
    default_case <nodo> (114)
        on left: 60 61
        on right: 35
    break_statement <nodo> (115)
        on left: 62
        on right: 11
    continue_statement <nodo> (116)
        on left: 63
        on right: 25
    instruccion_simple <nodo> (117)
        on left: 64 65 66
        on right: 31 32 33 37 39 41 43
    asignacion <nodo> (118)
        on left: 67 68 69 70 71 72 73 74 75 76 77
        on right: 22 42 43 45 59 66
    lista_Expr <nodo> (119)
        on left: 78 79
        on right: 78 80 81 83 92 108 166 203
    imprimir <nodo> (120)
        on left: 80 81 82 83 84
        on right: 16 56 64
    bloque <nodo> (121)
        on left: 85 86
        on right: 17 28 29 30 32 36 42 57 182 183 184 200 201
    bloque_for <nodo> (122)
        on left: 87
        on right: 38 40 44
    declaracion_var <nodo> (123)
        on left: 88 89 90
        on right: 18 38 39 40 41 58 65
    array_decl_local <nodo> (124)
        on left: 91 92 93 94 95
        on right: 88
    brackets_seq <boolean> (125)
        on left: 96 97
        on right: 91 92 93 94 95 97 183
    var_decl <nodo> (126)
        on left: 98 99
        on right: 89
    final_var_decl <nodo> (127)
        on left: 100
        on right: 90
    dims_expr_list <nodo> (128)
        on left: 101 102
        on right: 91 102
    lista_bloques2D <nodo> (129)
        on left: 103 104
        on right: 94 104
    bloque2D <nodo> (130)
        on left: 105
        on right: 93 103 104
    filas_lista <nodo> (131)
        on left: 106 107
        on right: 105 107
    fila_matriz <nodo> (132)
        on left: 108
        on right: 106 107
    asignacion_elemento <nodo> (133)
        on left: 109 110 111 112 113 114 115 116 117 118 119 120
        on right: 23
    indices_una <nodo> (134)
        on left: 121
        on right: 109 111 112 113 114 115 122 123
    indices_multi <nodo> (135)
        on left: 122 123
        on right: 110 116 117 118 119 120 123
    expr <nodo> (136)
        on left: 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144
        on right: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 50 51 67 68 69 70 71 72 73 74 75 76 77 78 79 95 98 100 101 102 109 110 111 112 113 114 115 116 117 118 119 120 121 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 146 148 149 156 159 160 161 162 163 164 165 166 199
    postfix <nodo> (137)
        on left: 145 146 147 148 149 150 151 152
        on right: 24 144 146 147 148 149 150 154
    unary <nodo> (138)
        on left: 153 154
        on right: 145
    atom <nodo> (139)
        on left: 155 156 157 158 159 160 161 162 163 164 165
        on right: 153
    join_variadic_args <nodo> (140)
        on left: 166
        on right: 165
    primitivo <nodo> (141)
        on left: 167 168 169 170 171 172 173 174
        on right: 155
    tipoPrimitivo <tipoDato> (142)
        on left: 175 176 177 178 179 180 181
        on right: 91 92 93 94 95 98 99 100 154 182 183 189 196 197 200 201
    funcion_declaracion <nodo> (143)
        on left: 182 183
        on right: 19
    main_declaracion <nodo> (144)
        on left: 184
        on right: 20
    main_params_opt (145)
        on left: 185 186
        on right: 184
    main_params (146)
        on left: 187 188
        on right: 186 188
    main_param (147)
        on left: 189
        on right: 187 188
    main_param_array_brackets (148)
        on left: 190 191
        on right: 189 191
    param_opt <paramList> (149)
        on left: 192 193
        on right: 182 183
    param_array_brackets <boolean> (150)
        on left: 194 195
        on right: 195 196 197
    lista_parametros <paramList> (151)
        on left: 196 197
        on right: 193 197
    return_stmt <nodo> (152)
        on left: 198 199
        on right: 21
    for_each_statement <nodo> (153)
        on left: 200 201
        on right: 14
    argumentos_opt <nodo> (154)
        on left: 202 203
        on right: 204
    llamada_funcion <nodo> (155)
        on left: 204
        on right: 158


Estado 0

    0 $accept: • s $end

    error                     desplazar e ir al estado 1
    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 6
    TOKEN_UNSIGNED_INTEGER    desplazar e ir al estado 7
    TOKEN_REAL                desplazar e ir al estado 8
    TOKEN_REAL_FLOAT          desplazar e ir al estado 9
    TOKEN_STRING              desplazar e ir al estado 10
    TOKEN_IDENTIFIER          desplazar e ir al estado 11
    TOKEN_TRUE                desplazar e ir al estado 12
    TOKEN_FALSE               desplazar e ir al estado 13
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_CHAR_LITERAL        desplazar e ir al estado 16
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_SYSTEM_OUT_PRINT    desplazar e ir al estado 19
    TOKEN_DVOID               desplazar e ir al estado 20
    TOKEN_NULL                desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS       desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS        desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS         desplazar e ir al estado 24
    TOKEN_ARRAYS              desplazar e ir al estado 25
    TOKEN_IF                  desplazar e ir al estado 26
    TOKEN_SWITCH              desplazar e ir al estado 27
    TOKEN_BREAK               desplazar e ir al estado 28
    TOKEN_WHILE               desplazar e ir al estado 29
    TOKEN_FOR                 desplazar e ir al estado 30
    TOKEN_CONTINUE            desplazar e ir al estado 31
    TOKEN_RETURN              desplazar e ir al estado 32
    TOKEN_PUBLIC              desplazar e ir al estado 33
    TOKEN_REPEAT              desplazar e ir al estado 34
    '('                       desplazar e ir al estado 35
    '{'                       desplazar e ir al estado 36

    s                    ir al estado 37
    lSentencia           ir al estado 38
    instruccion          ir al estado 39
    if_statement         ir al estado 40
    switch_statement     ir al estado 41
    while_statement      ir al estado 42
    for_statement        ir al estado 43
    repeat_statement     ir al estado 44
    break_statement      ir al estado 45
    continue_statement   ir al estado 46
    asignacion           ir al estado 47
    imprimir             ir al estado 48
    bloque               ir al estado 49
    declaracion_var      ir al estado 50
    array_decl_local     ir al estado 51
    var_decl             ir al estado 52
    final_var_decl       ir al estado 53
    asignacion_elemento  ir al estado 54
    postfix              ir al estado 55
    unary                ir al estado 56
    atom                 ir al estado 57
    primitivo            ir al estado 58
    tipoPrimitivo        ir al estado 59
    funcion_declaracion  ir al estado 60
    main_declaracion     ir al estado 61
    return_stmt          ir al estado 62
    for_each_statement   ir al estado 63
    llamada_funcion      ir al estado 64


Estado 1

    6 lSentencia: error • '}'
   26 instruccion: error • ';'
   27            | error • '}'

    '}'  desplazar e ir al estado 65
    ';'  desplazar e ir al estado 66


Estado 2

   80 imprimir: TOKEN_PRINT • '(' lista_Expr ')'

    '('  desplazar e ir al estado 67


Estado 3

  175 tipoPrimitivo: TOKEN_DINT •

    $default  reduce usando la regla 175 (tipoPrimitivo)


Estado 4

  176 tipoPrimitivo: TOKEN_DFLOAT •

    $default  reduce usando la regla 176 (tipoPrimitivo)


Estado 5

  177 tipoPrimitivo: TOKEN_DDOUBLE •

    $default  reduce usando la regla 177 (tipoPrimitivo)


Estado 6

  163 atom: TOKEN_DSTRING • '.' TOKEN_VALUE_OF '(' expr ')'
  164     | TOKEN_DSTRING • '.' TOKEN_JOIN '(' expr ',' expr ')'
  165     | TOKEN_DSTRING • '.' TOKEN_JOIN '(' expr ',' join_variadic_args ')'
  178 tipoPrimitivo: TOKEN_DSTRING •

    '.'  desplazar e ir al estado 68

    $default  reduce usando la regla 178 (tipoPrimitivo)


Estado 7

  167 primitivo: TOKEN_UNSIGNED_INTEGER •

    $default  reduce usando la regla 167 (primitivo)


Estado 8

  170 primitivo: TOKEN_REAL •

    $default  reduce usando la regla 170 (primitivo)


Estado 9

  169 primitivo: TOKEN_REAL_FLOAT •

    $default  reduce usando la regla 169 (primitivo)


Estado 10

  168 primitivo: TOKEN_STRING •

    $default  reduce usando la regla 168 (primitivo)


Estado 11

   67 asignacion: TOKEN_IDENTIFIER • '=' expr
   68           | TOKEN_IDENTIFIER • TOKEN_PLUS_ASSIGN expr
   69           | TOKEN_IDENTIFIER • TOKEN_MINUS_ASSIGN expr
   70           | TOKEN_IDENTIFIER • TOKEN_MUL_ASSIGN expr
   71           | TOKEN_IDENTIFIER • TOKEN_DIV_ASSIGN expr
   72           | TOKEN_IDENTIFIER • TOKEN_MOD_ASSIGN expr
   73           | TOKEN_IDENTIFIER • TOKEN_AND_ASSIGN expr
   74           | TOKEN_IDENTIFIER • TOKEN_OR_ASSIGN expr
   75           | TOKEN_IDENTIFIER • TOKEN_XOR_ASSIGN expr
   76           | TOKEN_IDENTIFIER • TOKEN_SHL_ASSIGN expr
   77           | TOKEN_IDENTIFIER • TOKEN_SHR_ASSIGN expr
  109 asignacion_elemento: TOKEN_IDENTIFIER • indices_una '=' expr
  110                    | TOKEN_IDENTIFIER • indices_multi '=' expr
  111                    | TOKEN_IDENTIFIER • indices_una TOKEN_PLUS_ASSIGN expr
  112                    | TOKEN_IDENTIFIER • indices_una TOKEN_MINUS_ASSIGN expr
  113                    | TOKEN_IDENTIFIER • indices_una TOKEN_MUL_ASSIGN expr
  114                    | TOKEN_IDENTIFIER • indices_una TOKEN_DIV_ASSIGN expr
  115                    | TOKEN_IDENTIFIER • indices_una TOKEN_MOD_ASSIGN expr
  116                    | TOKEN_IDENTIFIER • indices_multi TOKEN_PLUS_ASSIGN expr
  117                    | TOKEN_IDENTIFIER • indices_multi TOKEN_MINUS_ASSIGN expr
  118                    | TOKEN_IDENTIFIER • indices_multi TOKEN_MUL_ASSIGN expr
  119                    | TOKEN_IDENTIFIER • indices_multi TOKEN_DIV_ASSIGN expr
  120                    | TOKEN_IDENTIFIER • indices_multi TOKEN_MOD_ASSIGN expr
  151 postfix: TOKEN_IDENTIFIER • TOKEN_PLUS_PLUS
  152        | TOKEN_IDENTIFIER • TOKEN_MINUS_MINUS
  157 atom: TOKEN_IDENTIFIER •
  204 llamada_funcion: TOKEN_IDENTIFIER • '(' argumentos_opt ')'

    TOKEN_PLUS_PLUS     desplazar e ir al estado 69
    TOKEN_MINUS_MINUS   desplazar e ir al estado 70
    TOKEN_PLUS_ASSIGN   desplazar e ir al estado 71
    TOKEN_MINUS_ASSIGN  desplazar e ir al estado 72
    TOKEN_MUL_ASSIGN    desplazar e ir al estado 73
    TOKEN_DIV_ASSIGN    desplazar e ir al estado 74
    TOKEN_MOD_ASSIGN    desplazar e ir al estado 75
    TOKEN_AND_ASSIGN    desplazar e ir al estado 76
    TOKEN_OR_ASSIGN     desplazar e ir al estado 77
    TOKEN_XOR_ASSIGN    desplazar e ir al estado 78
    TOKEN_SHL_ASSIGN    desplazar e ir al estado 79
    TOKEN_SHR_ASSIGN    desplazar e ir al estado 80
    '('                 desplazar e ir al estado 81
    '='                 desplazar e ir al estado 82
    '['                 desplazar e ir al estado 83

    '['       [reduce usando la regla 157 (atom)]
    $default  reduce usando la regla 157 (atom)

    indices_una    ir al estado 84
    indices_multi  ir al estado 85


Estado 12

  172 primitivo: TOKEN_TRUE •

    $default  reduce usando la regla 172 (primitivo)


Estado 13

  173 primitivo: TOKEN_FALSE •

    $default  reduce usando la regla 173 (primitivo)


Estado 14

  179 tipoPrimitivo: TOKEN_DBOOLEAN •

    $default  reduce usando la regla 179 (tipoPrimitivo)


Estado 15

  180 tipoPrimitivo: TOKEN_DCHAR •

    $default  reduce usando la regla 180 (tipoPrimitivo)


Estado 16

  171 primitivo: TOKEN_CHAR_LITERAL •

    $default  reduce usando la regla 171 (primitivo)


Estado 17

  100 final_var_decl: TOKEN_FINAL • tipoPrimitivo TOKEN_IDENTIFIER '=' expr

    TOKEN_DINT      desplazar e ir al estado 3
    TOKEN_DFLOAT    desplazar e ir al estado 4
    TOKEN_DDOUBLE   desplazar e ir al estado 5
    TOKEN_DSTRING   desplazar e ir al estado 86
    TOKEN_DBOOLEAN  desplazar e ir al estado 14
    TOKEN_DCHAR     desplazar e ir al estado 15
    TOKEN_DVOID     desplazar e ir al estado 20

    tipoPrimitivo  ir al estado 87


Estado 18

   81 imprimir: TOKEN_SYSTEM_OUT_PRINTLN • '(' lista_Expr ')'
   82         | TOKEN_SYSTEM_OUT_PRINTLN • '(' ')'

    '('  desplazar e ir al estado 88


Estado 19

   83 imprimir: TOKEN_SYSTEM_OUT_PRINT • '(' lista_Expr ')'
   84         | TOKEN_SYSTEM_OUT_PRINT • '(' ')'

    '('  desplazar e ir al estado 89


Estado 20

  181 tipoPrimitivo: TOKEN_DVOID •

    $default  reduce usando la regla 181 (tipoPrimitivo)


Estado 21

  174 primitivo: TOKEN_NULL •

    $default  reduce usando la regla 174 (primitivo)


Estado 22

  160 atom: TOKEN_INTEGER_CLASS • '.' TOKEN_PARSE_INT '(' expr ')'

    '.'  desplazar e ir al estado 90


Estado 23

  161 atom: TOKEN_DOUBLE_CLASS • '.' TOKEN_PARSE_DOUBLE '(' expr ')'

    '.'  desplazar e ir al estado 91


Estado 24

  162 atom: TOKEN_FLOAT_CLASS • '.' TOKEN_PARSE_FLOAT '(' expr ')'

    '.'  desplazar e ir al estado 92


Estado 25

  159 atom: TOKEN_ARRAYS • '.' TOKEN_INDEXOF '(' expr ',' expr ')'

    '.'  desplazar e ir al estado 93


Estado 26

   28 if_statement: TOKEN_IF • '(' expr ')' bloque
   29             | TOKEN_IF • '(' expr ')' bloque TOKEN_ELSE bloque
   30             | TOKEN_IF • '(' expr ')' bloque TOKEN_ELSE if_statement
   31             | TOKEN_IF • '(' expr ')' instruccion_simple ';'
   32             | TOKEN_IF • '(' expr ')' instruccion_simple ';' TOKEN_ELSE bloque
   33             | TOKEN_IF • '(' expr ')' instruccion_simple ';' TOKEN_ELSE if_statement

    '('  desplazar e ir al estado 94


Estado 27

   34 switch_statement: TOKEN_SWITCH • '(' expr ')' '{' case_list '}'
   35                 | TOKEN_SWITCH • '(' expr ')' '{' case_list default_case '}'

    '('  desplazar e ir al estado 95


Estado 28

   62 break_statement: TOKEN_BREAK • ';'

    ';'  desplazar e ir al estado 96


Estado 29

   36 while_statement: TOKEN_WHILE • '(' expr ')' bloque
   37                | TOKEN_WHILE • '(' expr ')' instruccion_simple

    '('  desplazar e ir al estado 97


Estado 30

   38 for_statement: TOKEN_FOR • '(' declaracion_var ';' expr ';' incremento ')' bloque_for
   39              | TOKEN_FOR • '(' declaracion_var ';' expr ';' incremento ')' instruccion_simple
   40              | TOKEN_FOR • '(' declaracion_var ';' expr ';' ')' bloque_for
   41              | TOKEN_FOR • '(' declaracion_var ';' expr ';' ')' instruccion_simple
   42              | TOKEN_FOR • '(' asignacion ';' expr ';' incremento ')' bloque
   43              | TOKEN_FOR • '(' asignacion ';' expr ';' incremento ')' instruccion_simple
  200 for_each_statement: TOKEN_FOR • '(' tipoPrimitivo TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque
  201                   | TOKEN_FOR • '(' tipoPrimitivo '[' ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque

    '('  desplazar e ir al estado 98


Estado 31

   63 continue_statement: TOKEN_CONTINUE • ';'

    ';'  desplazar e ir al estado 99


Estado 32

  198 return_stmt: TOKEN_RETURN •
  199            | TOKEN_RETURN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    $default  reduce usando la regla 198 (return_stmt)

    expr             ir al estado 104
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 33

  184 main_declaracion: TOKEN_PUBLIC • TOKEN_STATIC TOKEN_DVOID TOKEN_IDENTIFIER '(' main_params_opt ')' bloque

    TOKEN_STATIC  desplazar e ir al estado 106


Estado 34

   44 repeat_statement: TOKEN_REPEAT • expr bloque_for

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 107
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 35

  154 unary: '(' • tipoPrimitivo ')' postfix
  156 atom: '(' • expr ')'

    TOKEN_DINT              desplazar e ir al estado 3
    TOKEN_DFLOAT            desplazar e ir al estado 4
    TOKEN_DDOUBLE           desplazar e ir al estado 5
    TOKEN_DSTRING           desplazar e ir al estado 6
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_DBOOLEAN          desplazar e ir al estado 14
    TOKEN_DCHAR             desplazar e ir al estado 15
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_DVOID             desplazar e ir al estado 20
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 108
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    tipoPrimitivo    ir al estado 109
    llamada_funcion  ir al estado 64


Estado 36

   85 bloque: '{' • lSentencia '}'
   86       | '{' • error '}'

    error                     desplazar e ir al estado 110
    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 6
    TOKEN_UNSIGNED_INTEGER    desplazar e ir al estado 7
    TOKEN_REAL                desplazar e ir al estado 8
    TOKEN_REAL_FLOAT          desplazar e ir al estado 9
    TOKEN_STRING              desplazar e ir al estado 10
    TOKEN_IDENTIFIER          desplazar e ir al estado 11
    TOKEN_TRUE                desplazar e ir al estado 12
    TOKEN_FALSE               desplazar e ir al estado 13
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_CHAR_LITERAL        desplazar e ir al estado 16
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_SYSTEM_OUT_PRINT    desplazar e ir al estado 19
    TOKEN_DVOID               desplazar e ir al estado 20
    TOKEN_NULL                desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS       desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS        desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS         desplazar e ir al estado 24
    TOKEN_ARRAYS              desplazar e ir al estado 25
    TOKEN_IF                  desplazar e ir al estado 26
    TOKEN_SWITCH              desplazar e ir al estado 27
    TOKEN_BREAK               desplazar e ir al estado 28
    TOKEN_WHILE               desplazar e ir al estado 29
    TOKEN_FOR                 desplazar e ir al estado 30
    TOKEN_CONTINUE            desplazar e ir al estado 31
    TOKEN_RETURN              desplazar e ir al estado 32
    TOKEN_PUBLIC              desplazar e ir al estado 33
    TOKEN_REPEAT              desplazar e ir al estado 34
    '('                       desplazar e ir al estado 35
    '{'                       desplazar e ir al estado 36

    lSentencia           ir al estado 111
    instruccion          ir al estado 39
    if_statement         ir al estado 40
    switch_statement     ir al estado 41
    while_statement      ir al estado 42
    for_statement        ir al estado 43
    repeat_statement     ir al estado 44
    break_statement      ir al estado 45
    continue_statement   ir al estado 46
    asignacion           ir al estado 47
    imprimir             ir al estado 48
    bloque               ir al estado 49
    declaracion_var      ir al estado 50
    array_decl_local     ir al estado 51
    var_decl             ir al estado 52
    final_var_decl       ir al estado 53
    asignacion_elemento  ir al estado 54
    postfix              ir al estado 55
    unary                ir al estado 56
    atom                 ir al estado 57
    primitivo            ir al estado 58
    tipoPrimitivo        ir al estado 59
    funcion_declaracion  ir al estado 60
    main_declaracion     ir al estado 61
    return_stmt          ir al estado 62
    for_each_statement   ir al estado 63
    llamada_funcion      ir al estado 64


Estado 37

    0 $accept: s • $end

    $end  desplazar e ir al estado 112


Estado 38

    1 s: lSentencia •
    2 lSentencia: lSentencia • instruccion
    3           | lSentencia • comentario
    5           | lSentencia • error '}'

    error                     desplazar e ir al estado 113
    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 6
    TOKEN_UNSIGNED_INTEGER    desplazar e ir al estado 7
    TOKEN_REAL                desplazar e ir al estado 8
    TOKEN_REAL_FLOAT          desplazar e ir al estado 9
    TOKEN_STRING              desplazar e ir al estado 10
    TOKEN_IDENTIFIER          desplazar e ir al estado 11
    TOKEN_TRUE                desplazar e ir al estado 12
    TOKEN_FALSE               desplazar e ir al estado 13
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_CHAR_LITERAL        desplazar e ir al estado 16
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_SYSTEM_OUT_PRINT    desplazar e ir al estado 19
    TOKEN_DVOID               desplazar e ir al estado 20
    TOKEN_COMMENT_LINE        desplazar e ir al estado 114
    TOKEN_COMMENT_MULTI       desplazar e ir al estado 115
    TOKEN_NULL                desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS       desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS        desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS         desplazar e ir al estado 24
    TOKEN_ARRAYS              desplazar e ir al estado 25
    TOKEN_IF                  desplazar e ir al estado 26
    TOKEN_SWITCH              desplazar e ir al estado 27
    TOKEN_BREAK               desplazar e ir al estado 28
    TOKEN_WHILE               desplazar e ir al estado 29
    TOKEN_FOR                 desplazar e ir al estado 30
    TOKEN_CONTINUE            desplazar e ir al estado 31
    TOKEN_RETURN              desplazar e ir al estado 32
    TOKEN_PUBLIC              desplazar e ir al estado 33
    TOKEN_REPEAT              desplazar e ir al estado 34
    '('                       desplazar e ir al estado 35
    '{'                       desplazar e ir al estado 36

    $end  reduce usando la regla 1 (s)

    comentario           ir al estado 116
    instruccion          ir al estado 117
    if_statement         ir al estado 40
    switch_statement     ir al estado 41
    while_statement      ir al estado 42
    for_statement        ir al estado 43
    repeat_statement     ir al estado 44
    break_statement      ir al estado 45
    continue_statement   ir al estado 46
    asignacion           ir al estado 47
    imprimir             ir al estado 48
    bloque               ir al estado 49
    declaracion_var      ir al estado 50
    array_decl_local     ir al estado 51
    var_decl             ir al estado 52
    final_var_decl       ir al estado 53
    asignacion_elemento  ir al estado 54
    postfix              ir al estado 55
    unary                ir al estado 56
    atom                 ir al estado 57
    primitivo            ir al estado 58
    tipoPrimitivo        ir al estado 59
    funcion_declaracion  ir al estado 60
    main_declaracion     ir al estado 61
    return_stmt          ir al estado 62
    for_each_statement   ir al estado 63
    llamada_funcion      ir al estado 64


Estado 39

    4 lSentencia: instruccion •

    $default  reduce usando la regla 4 (lSentencia)


Estado 40

    9 instruccion: if_statement •

    $default  reduce usando la regla 9 (instruccion)


Estado 41

   10 instruccion: switch_statement •

    $default  reduce usando la regla 10 (instruccion)


Estado 42

   12 instruccion: while_statement •

    $default  reduce usando la regla 12 (instruccion)


Estado 43

   13 instruccion: for_statement •

    $default  reduce usando la regla 13 (instruccion)


Estado 44

   15 instruccion: repeat_statement •

    $default  reduce usando la regla 15 (instruccion)


Estado 45

   11 instruccion: break_statement •

    $default  reduce usando la regla 11 (instruccion)


Estado 46

   25 instruccion: continue_statement •

    $default  reduce usando la regla 25 (instruccion)


Estado 47

   22 instruccion: asignacion • ';'

    ';'  desplazar e ir al estado 118


Estado 48

   16 instruccion: imprimir • ';'

    ';'  desplazar e ir al estado 119


Estado 49

   17 instruccion: bloque •

    $default  reduce usando la regla 17 (instruccion)


Estado 50

   18 instruccion: declaracion_var • ';'

    ';'  desplazar e ir al estado 120


Estado 51

   88 declaracion_var: array_decl_local •

    $default  reduce usando la regla 88 (declaracion_var)


Estado 52

   89 declaracion_var: var_decl •

    $default  reduce usando la regla 89 (declaracion_var)


Estado 53

   90 declaracion_var: final_var_decl •

    $default  reduce usando la regla 90 (declaracion_var)


Estado 54

   23 instruccion: asignacion_elemento • ';'

    ';'  desplazar e ir al estado 121


Estado 55

   24 instruccion: postfix • ';'
  146 postfix: postfix • '[' expr ']'
  147        | postfix • '.' TOKEN_LENGTH
  148        | postfix • '.' TOKEN_ADD '(' expr ')'
  149        | postfix • '.' TOKEN_IDENTIFIER '(' expr ')'
  150        | postfix • '.' TOKEN_IDENTIFIER '(' ')'

    '.'  desplazar e ir al estado 122
    ';'  desplazar e ir al estado 123
    '['  desplazar e ir al estado 124


Estado 56

  145 postfix: unary •

    $default  reduce usando la regla 145 (postfix)


Estado 57

  153 unary: atom •

    $default  reduce usando la regla 153 (unary)


Estado 58

  155 atom: primitivo •

    $default  reduce usando la regla 155 (atom)


Estado 59

   91 array_decl_local: tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '=' TOKEN_NEW tipoPrimitivo dims_expr_list
   92                 | tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '=' '{' lista_Expr '}'
   93                 | tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '=' bloque2D
   94                 | tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '=' '{' lista_bloques2D '}'
   95                 | tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '=' expr
   98 var_decl: tipoPrimitivo • TOKEN_IDENTIFIER '=' expr
   99         | tipoPrimitivo • TOKEN_IDENTIFIER
  182 funcion_declaracion: tipoPrimitivo • TOKEN_IDENTIFIER '(' param_opt ')' bloque
  183                    | tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '(' param_opt ')' bloque

    TOKEN_IDENTIFIER  desplazar e ir al estado 125
    '['               desplazar e ir al estado 126

    brackets_seq  ir al estado 127


Estado 60

   19 instruccion: funcion_declaracion •

    $default  reduce usando la regla 19 (instruccion)


Estado 61

   20 instruccion: main_declaracion •

    $default  reduce usando la regla 20 (instruccion)


Estado 62

   21 instruccion: return_stmt • ';'

    ';'  desplazar e ir al estado 128


Estado 63

   14 instruccion: for_each_statement •

    $default  reduce usando la regla 14 (instruccion)


Estado 64

  158 atom: llamada_funcion •

    $default  reduce usando la regla 158 (atom)


Estado 65

    6 lSentencia: error '}' •
   27 instruccion: error '}' •

    $end                      reduce usando la regla 6 (lSentencia)
    $end                      [reduce usando la regla 27 (instruccion)]
    error                     reduce usando la regla 6 (lSentencia)
    error                     [reduce usando la regla 27 (instruccion)]
    TOKEN_PRINT               reduce usando la regla 6 (lSentencia)
    TOKEN_PRINT               [reduce usando la regla 27 (instruccion)]
    TOKEN_DINT                reduce usando la regla 6 (lSentencia)
    TOKEN_DINT                [reduce usando la regla 27 (instruccion)]
    TOKEN_DFLOAT              reduce usando la regla 6 (lSentencia)
    TOKEN_DFLOAT              [reduce usando la regla 27 (instruccion)]
    TOKEN_DDOUBLE             reduce usando la regla 6 (lSentencia)
    TOKEN_DDOUBLE             [reduce usando la regla 27 (instruccion)]
    TOKEN_DSTRING             reduce usando la regla 6 (lSentencia)
    TOKEN_DSTRING             [reduce usando la regla 27 (instruccion)]
    TOKEN_UNSIGNED_INTEGER    reduce usando la regla 6 (lSentencia)
    TOKEN_UNSIGNED_INTEGER    [reduce usando la regla 27 (instruccion)]
    TOKEN_REAL                reduce usando la regla 6 (lSentencia)
    TOKEN_REAL                [reduce usando la regla 27 (instruccion)]
    TOKEN_REAL_FLOAT          reduce usando la regla 6 (lSentencia)
    TOKEN_REAL_FLOAT          [reduce usando la regla 27 (instruccion)]
    TOKEN_STRING              reduce usando la regla 6 (lSentencia)
    TOKEN_STRING              [reduce usando la regla 27 (instruccion)]
    TOKEN_IDENTIFIER          reduce usando la regla 6 (lSentencia)
    TOKEN_IDENTIFIER          [reduce usando la regla 27 (instruccion)]
    TOKEN_TRUE                reduce usando la regla 6 (lSentencia)
    TOKEN_TRUE                [reduce usando la regla 27 (instruccion)]
    TOKEN_FALSE               reduce usando la regla 6 (lSentencia)
    TOKEN_FALSE               [reduce usando la regla 27 (instruccion)]
    TOKEN_DBOOLEAN            reduce usando la regla 6 (lSentencia)
    TOKEN_DBOOLEAN            [reduce usando la regla 27 (instruccion)]
    TOKEN_DCHAR               reduce usando la regla 6 (lSentencia)
    TOKEN_DCHAR               [reduce usando la regla 27 (instruccion)]
    TOKEN_CHAR_LITERAL        reduce usando la regla 6 (lSentencia)
    TOKEN_CHAR_LITERAL        [reduce usando la regla 27 (instruccion)]
    TOKEN_FINAL               reduce usando la regla 6 (lSentencia)
    TOKEN_FINAL               [reduce usando la regla 27 (instruccion)]
    TOKEN_SYSTEM_OUT_PRINTLN  reduce usando la regla 6 (lSentencia)
    TOKEN_SYSTEM_OUT_PRINTLN  [reduce usando la regla 27 (instruccion)]
    TOKEN_SYSTEM_OUT_PRINT    reduce usando la regla 6 (lSentencia)
    TOKEN_SYSTEM_OUT_PRINT    [reduce usando la regla 27 (instruccion)]
    TOKEN_DVOID               reduce usando la regla 6 (lSentencia)
    TOKEN_DVOID               [reduce usando la regla 27 (instruccion)]
    TOKEN_COMMENT_LINE        reduce usando la regla 6 (lSentencia)
    TOKEN_COMMENT_LINE        [reduce usando la regla 27 (instruccion)]
    TOKEN_COMMENT_MULTI       reduce usando la regla 6 (lSentencia)
    TOKEN_COMMENT_MULTI       [reduce usando la regla 27 (instruccion)]
    TOKEN_NULL                reduce usando la regla 6 (lSentencia)
    TOKEN_NULL                [reduce usando la regla 27 (instruccion)]
    TOKEN_INTEGER_CLASS       reduce usando la regla 6 (lSentencia)
    TOKEN_INTEGER_CLASS       [reduce usando la regla 27 (instruccion)]
    TOKEN_DOUBLE_CLASS        reduce usando la regla 6 (lSentencia)
    TOKEN_DOUBLE_CLASS        [reduce usando la regla 27 (instruccion)]
    TOKEN_FLOAT_CLASS         reduce usando la regla 6 (lSentencia)
    TOKEN_FLOAT_CLASS         [reduce usando la regla 27 (instruccion)]
    TOKEN_ARRAYS              reduce usando la regla 6 (lSentencia)
    TOKEN_ARRAYS              [reduce usando la regla 27 (instruccion)]
    TOKEN_IF                  reduce usando la regla 6 (lSentencia)
    TOKEN_IF                  [reduce usando la regla 27 (instruccion)]
    TOKEN_SWITCH              reduce usando la regla 6 (lSentencia)
    TOKEN_SWITCH              [reduce usando la regla 27 (instruccion)]
    TOKEN_BREAK               reduce usando la regla 6 (lSentencia)
    TOKEN_BREAK               [reduce usando la regla 27 (instruccion)]
    TOKEN_WHILE               reduce usando la regla 6 (lSentencia)
    TOKEN_WHILE               [reduce usando la regla 27 (instruccion)]
    TOKEN_FOR                 reduce usando la regla 6 (lSentencia)
    TOKEN_FOR                 [reduce usando la regla 27 (instruccion)]
    TOKEN_CONTINUE            reduce usando la regla 6 (lSentencia)
    TOKEN_CONTINUE            [reduce usando la regla 27 (instruccion)]
    TOKEN_RETURN              reduce usando la regla 6 (lSentencia)
    TOKEN_RETURN              [reduce usando la regla 27 (instruccion)]
    TOKEN_PUBLIC              reduce usando la regla 6 (lSentencia)
    TOKEN_PUBLIC              [reduce usando la regla 27 (instruccion)]
    TOKEN_REPEAT              reduce usando la regla 6 (lSentencia)
    TOKEN_REPEAT              [reduce usando la regla 27 (instruccion)]
    '}'                       reduce usando la regla 6 (lSentencia)
    '}'                       [reduce usando la regla 27 (instruccion)]
    '('                       reduce usando la regla 6 (lSentencia)
    '('                       [reduce usando la regla 27 (instruccion)]
    '{'                       reduce usando la regla 6 (lSentencia)
    '{'                       [reduce usando la regla 27 (instruccion)]
    $default                  reduce usando la regla 6 (lSentencia)


Estado 66

   26 instruccion: error ';' •

    $default  reduce usando la regla 26 (instruccion)


Estado 67

   80 imprimir: TOKEN_PRINT '(' • lista_Expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    lista_Expr       ir al estado 129
    expr             ir al estado 130
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 68

  163 atom: TOKEN_DSTRING '.' • TOKEN_VALUE_OF '(' expr ')'
  164     | TOKEN_DSTRING '.' • TOKEN_JOIN '(' expr ',' expr ')'
  165     | TOKEN_DSTRING '.' • TOKEN_JOIN '(' expr ',' join_variadic_args ')'

    TOKEN_VALUE_OF  desplazar e ir al estado 131
    TOKEN_JOIN      desplazar e ir al estado 132


Estado 69

  151 postfix: TOKEN_IDENTIFIER TOKEN_PLUS_PLUS •

    $default  reduce usando la regla 151 (postfix)


Estado 70

  152 postfix: TOKEN_IDENTIFIER TOKEN_MINUS_MINUS •

    $default  reduce usando la regla 152 (postfix)


Estado 71

   68 asignacion: TOKEN_IDENTIFIER TOKEN_PLUS_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 133
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 72

   69 asignacion: TOKEN_IDENTIFIER TOKEN_MINUS_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 134
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 73

   70 asignacion: TOKEN_IDENTIFIER TOKEN_MUL_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 135
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 74

   71 asignacion: TOKEN_IDENTIFIER TOKEN_DIV_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 136
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 75

   72 asignacion: TOKEN_IDENTIFIER TOKEN_MOD_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 137
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 76

   73 asignacion: TOKEN_IDENTIFIER TOKEN_AND_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 138
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 77

   74 asignacion: TOKEN_IDENTIFIER TOKEN_OR_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 139
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 78

   75 asignacion: TOKEN_IDENTIFIER TOKEN_XOR_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 140
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 79

   76 asignacion: TOKEN_IDENTIFIER TOKEN_SHL_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 141
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 80

   77 asignacion: TOKEN_IDENTIFIER TOKEN_SHR_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 142
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 81

  204 llamada_funcion: TOKEN_IDENTIFIER '(' • argumentos_opt ')'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    $default  reduce usando la regla 202 (argumentos_opt)

    lista_Expr       ir al estado 143
    expr             ir al estado 130
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    argumentos_opt   ir al estado 144
    llamada_funcion  ir al estado 64


Estado 82

   67 asignacion: TOKEN_IDENTIFIER '=' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 145
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 83

  121 indices_una: '[' • expr ']'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 146
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 84

  109 asignacion_elemento: TOKEN_IDENTIFIER indices_una • '=' expr
  111                    | TOKEN_IDENTIFIER indices_una • TOKEN_PLUS_ASSIGN expr
  112                    | TOKEN_IDENTIFIER indices_una • TOKEN_MINUS_ASSIGN expr
  113                    | TOKEN_IDENTIFIER indices_una • TOKEN_MUL_ASSIGN expr
  114                    | TOKEN_IDENTIFIER indices_una • TOKEN_DIV_ASSIGN expr
  115                    | TOKEN_IDENTIFIER indices_una • TOKEN_MOD_ASSIGN expr
  122 indices_multi: indices_una • indices_una

    TOKEN_PLUS_ASSIGN   desplazar e ir al estado 147
    TOKEN_MINUS_ASSIGN  desplazar e ir al estado 148
    TOKEN_MUL_ASSIGN    desplazar e ir al estado 149
    TOKEN_DIV_ASSIGN    desplazar e ir al estado 150
    TOKEN_MOD_ASSIGN    desplazar e ir al estado 151
    '='                 desplazar e ir al estado 152
    '['                 desplazar e ir al estado 83

    indices_una  ir al estado 153


Estado 85

  110 asignacion_elemento: TOKEN_IDENTIFIER indices_multi • '=' expr
  116                    | TOKEN_IDENTIFIER indices_multi • TOKEN_PLUS_ASSIGN expr
  117                    | TOKEN_IDENTIFIER indices_multi • TOKEN_MINUS_ASSIGN expr
  118                    | TOKEN_IDENTIFIER indices_multi • TOKEN_MUL_ASSIGN expr
  119                    | TOKEN_IDENTIFIER indices_multi • TOKEN_DIV_ASSIGN expr
  120                    | TOKEN_IDENTIFIER indices_multi • TOKEN_MOD_ASSIGN expr
  123 indices_multi: indices_multi • indices_una

    TOKEN_PLUS_ASSIGN   desplazar e ir al estado 154
    TOKEN_MINUS_ASSIGN  desplazar e ir al estado 155
    TOKEN_MUL_ASSIGN    desplazar e ir al estado 156
    TOKEN_DIV_ASSIGN    desplazar e ir al estado 157
    TOKEN_MOD_ASSIGN    desplazar e ir al estado 158
    '='                 desplazar e ir al estado 159
    '['                 desplazar e ir al estado 83

    indices_una  ir al estado 160


Estado 86

  178 tipoPrimitivo: TOKEN_DSTRING •

    $default  reduce usando la regla 178 (tipoPrimitivo)


Estado 87

  100 final_var_decl: TOKEN_FINAL tipoPrimitivo • TOKEN_IDENTIFIER '=' expr

    TOKEN_IDENTIFIER  desplazar e ir al estado 161


Estado 88

   81 imprimir: TOKEN_SYSTEM_OUT_PRINTLN '(' • lista_Expr ')'
   82         | TOKEN_SYSTEM_OUT_PRINTLN '(' • ')'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35
    ')'                     desplazar e ir al estado 162

    lista_Expr       ir al estado 163
    expr             ir al estado 130
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 89

   83 imprimir: TOKEN_SYSTEM_OUT_PRINT '(' • lista_Expr ')'
   84         | TOKEN_SYSTEM_OUT_PRINT '(' • ')'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35
    ')'                     desplazar e ir al estado 164

    lista_Expr       ir al estado 165
    expr             ir al estado 130
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 90

  160 atom: TOKEN_INTEGER_CLASS '.' • TOKEN_PARSE_INT '(' expr ')'

    TOKEN_PARSE_INT  desplazar e ir al estado 166


Estado 91

  161 atom: TOKEN_DOUBLE_CLASS '.' • TOKEN_PARSE_DOUBLE '(' expr ')'

    TOKEN_PARSE_DOUBLE  desplazar e ir al estado 167


Estado 92

  162 atom: TOKEN_FLOAT_CLASS '.' • TOKEN_PARSE_FLOAT '(' expr ')'

    TOKEN_PARSE_FLOAT  desplazar e ir al estado 168


Estado 93

  159 atom: TOKEN_ARRAYS '.' • TOKEN_INDEXOF '(' expr ',' expr ')'

    TOKEN_INDEXOF  desplazar e ir al estado 169


Estado 94

   28 if_statement: TOKEN_IF '(' • expr ')' bloque
   29             | TOKEN_IF '(' • expr ')' bloque TOKEN_ELSE bloque
   30             | TOKEN_IF '(' • expr ')' bloque TOKEN_ELSE if_statement
   31             | TOKEN_IF '(' • expr ')' instruccion_simple ';'
   32             | TOKEN_IF '(' • expr ')' instruccion_simple ';' TOKEN_ELSE bloque
   33             | TOKEN_IF '(' • expr ')' instruccion_simple ';' TOKEN_ELSE if_statement

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 170
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 95

   34 switch_statement: TOKEN_SWITCH '(' • expr ')' '{' case_list '}'
   35                 | TOKEN_SWITCH '(' • expr ')' '{' case_list default_case '}'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 171
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 96

   62 break_statement: TOKEN_BREAK ';' •

    $default  reduce usando la regla 62 (break_statement)


Estado 97

   36 while_statement: TOKEN_WHILE '(' • expr ')' bloque
   37                | TOKEN_WHILE '(' • expr ')' instruccion_simple

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 172
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 98

   38 for_statement: TOKEN_FOR '(' • declaracion_var ';' expr ';' incremento ')' bloque_for
   39              | TOKEN_FOR '(' • declaracion_var ';' expr ';' incremento ')' instruccion_simple
   40              | TOKEN_FOR '(' • declaracion_var ';' expr ';' ')' bloque_for
   41              | TOKEN_FOR '(' • declaracion_var ';' expr ';' ')' instruccion_simple
   42              | TOKEN_FOR '(' • asignacion ';' expr ';' incremento ')' bloque
   43              | TOKEN_FOR '(' • asignacion ';' expr ';' incremento ')' instruccion_simple
  200 for_each_statement: TOKEN_FOR '(' • tipoPrimitivo TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque
  201                   | TOKEN_FOR '(' • tipoPrimitivo '[' ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque

    TOKEN_DINT        desplazar e ir al estado 3
    TOKEN_DFLOAT      desplazar e ir al estado 4
    TOKEN_DDOUBLE     desplazar e ir al estado 5
    TOKEN_DSTRING     desplazar e ir al estado 86
    TOKEN_IDENTIFIER  desplazar e ir al estado 173
    TOKEN_DBOOLEAN    desplazar e ir al estado 14
    TOKEN_DCHAR       desplazar e ir al estado 15
    TOKEN_FINAL       desplazar e ir al estado 17
    TOKEN_DVOID       desplazar e ir al estado 20

    asignacion        ir al estado 174
    declaracion_var   ir al estado 175
    array_decl_local  ir al estado 51
    var_decl          ir al estado 52
    final_var_decl    ir al estado 53
    tipoPrimitivo     ir al estado 176


Estado 99

   63 continue_statement: TOKEN_CONTINUE ';' •

    $default  reduce usando la regla 63 (continue_statement)


Estado 100

  163 atom: TOKEN_DSTRING • '.' TOKEN_VALUE_OF '(' expr ')'
  164     | TOKEN_DSTRING • '.' TOKEN_JOIN '(' expr ',' expr ')'
  165     | TOKEN_DSTRING • '.' TOKEN_JOIN '(' expr ',' join_variadic_args ')'

    '.'  desplazar e ir al estado 68


Estado 101

  151 postfix: TOKEN_IDENTIFIER • TOKEN_PLUS_PLUS
  152        | TOKEN_IDENTIFIER • TOKEN_MINUS_MINUS
  157 atom: TOKEN_IDENTIFIER •
  204 llamada_funcion: TOKEN_IDENTIFIER • '(' argumentos_opt ')'

    TOKEN_PLUS_PLUS    desplazar e ir al estado 69
    TOKEN_MINUS_MINUS  desplazar e ir al estado 70
    '('                desplazar e ir al estado 81

    '('       [reduce usando la regla 157 (atom)]
    $default  reduce usando la regla 157 (atom)


Estado 102

  142 expr: TOKEN_NOT • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 177
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 103

  143 expr: '-' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 178
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 104

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  199 return_stmt: TOKEN_RETURN expr •

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 199 (return_stmt)


Estado 105

  144 expr: postfix •
  146 postfix: postfix • '[' expr ']'
  147        | postfix • '.' TOKEN_LENGTH
  148        | postfix • '.' TOKEN_ADD '(' expr ')'
  149        | postfix • '.' TOKEN_IDENTIFIER '(' expr ')'
  150        | postfix • '.' TOKEN_IDENTIFIER '(' ')'

    '.'  desplazar e ir al estado 122
    '['  desplazar e ir al estado 124

    $default  reduce usando la regla 144 (expr)


Estado 106

  184 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC • TOKEN_DVOID TOKEN_IDENTIFIER '(' main_params_opt ')' bloque

    TOKEN_DVOID  desplazar e ir al estado 197


Estado 107

   44 repeat_statement: TOKEN_REPEAT expr • bloque_for
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    '{'                  desplazar e ir al estado 198

    bloque_for  ir al estado 199


Estado 108

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  156 atom: '(' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ')'                  desplazar e ir al estado 200


Estado 109

  154 unary: '(' tipoPrimitivo • ')' postfix

    ')'  desplazar e ir al estado 201


Estado 110

    6 lSentencia: error • '}'
   26 instruccion: error • ';'
   27            | error • '}'
   86 bloque: '{' error • '}'

    '}'  desplazar e ir al estado 202
    ';'  desplazar e ir al estado 66


Estado 111

    2 lSentencia: lSentencia • instruccion
    3           | lSentencia • comentario
    5           | lSentencia • error '}'
   85 bloque: '{' lSentencia • '}'

    error                     desplazar e ir al estado 113
    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 6
    TOKEN_UNSIGNED_INTEGER    desplazar e ir al estado 7
    TOKEN_REAL                desplazar e ir al estado 8
    TOKEN_REAL_FLOAT          desplazar e ir al estado 9
    TOKEN_STRING              desplazar e ir al estado 10
    TOKEN_IDENTIFIER          desplazar e ir al estado 11
    TOKEN_TRUE                desplazar e ir al estado 12
    TOKEN_FALSE               desplazar e ir al estado 13
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_CHAR_LITERAL        desplazar e ir al estado 16
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_SYSTEM_OUT_PRINT    desplazar e ir al estado 19
    TOKEN_DVOID               desplazar e ir al estado 20
    TOKEN_COMMENT_LINE        desplazar e ir al estado 114
    TOKEN_COMMENT_MULTI       desplazar e ir al estado 115
    TOKEN_NULL                desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS       desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS        desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS         desplazar e ir al estado 24
    TOKEN_ARRAYS              desplazar e ir al estado 25
    TOKEN_IF                  desplazar e ir al estado 26
    TOKEN_SWITCH              desplazar e ir al estado 27
    TOKEN_BREAK               desplazar e ir al estado 28
    TOKEN_WHILE               desplazar e ir al estado 29
    TOKEN_FOR                 desplazar e ir al estado 30
    TOKEN_CONTINUE            desplazar e ir al estado 31
    TOKEN_RETURN              desplazar e ir al estado 32
    TOKEN_PUBLIC              desplazar e ir al estado 33
    TOKEN_REPEAT              desplazar e ir al estado 34
    '}'                       desplazar e ir al estado 203
    '('                       desplazar e ir al estado 35
    '{'                       desplazar e ir al estado 36

    comentario           ir al estado 116
    instruccion          ir al estado 117
    if_statement         ir al estado 40
    switch_statement     ir al estado 41
    while_statement      ir al estado 42
    for_statement        ir al estado 43
    repeat_statement     ir al estado 44
    break_statement      ir al estado 45
    continue_statement   ir al estado 46
    asignacion           ir al estado 47
    imprimir             ir al estado 48
    bloque               ir al estado 49
    declaracion_var      ir al estado 50
    array_decl_local     ir al estado 51
    var_decl             ir al estado 52
    final_var_decl       ir al estado 53
    asignacion_elemento  ir al estado 54
    postfix              ir al estado 55
    unary                ir al estado 56
    atom                 ir al estado 57
    primitivo            ir al estado 58
    tipoPrimitivo        ir al estado 59
    funcion_declaracion  ir al estado 60
    main_declaracion     ir al estado 61
    return_stmt          ir al estado 62
    for_each_statement   ir al estado 63
    llamada_funcion      ir al estado 64


Estado 112

    0 $accept: s $end •

    $default  aceptar


Estado 113

    5 lSentencia: lSentencia error • '}'
   26 instruccion: error • ';'
   27            | error • '}'

    '}'  desplazar e ir al estado 204
    ';'  desplazar e ir al estado 66


Estado 114

    7 comentario: TOKEN_COMMENT_LINE •

    $default  reduce usando la regla 7 (comentario)


Estado 115

    8 comentario: TOKEN_COMMENT_MULTI •

    $default  reduce usando la regla 8 (comentario)


Estado 116

    3 lSentencia: lSentencia comentario •

    $default  reduce usando la regla 3 (lSentencia)


Estado 117

    2 lSentencia: lSentencia instruccion •

    $default  reduce usando la regla 2 (lSentencia)


Estado 118

   22 instruccion: asignacion ';' •

    $default  reduce usando la regla 22 (instruccion)


Estado 119

   16 instruccion: imprimir ';' •

    $default  reduce usando la regla 16 (instruccion)


Estado 120

   18 instruccion: declaracion_var ';' •

    $default  reduce usando la regla 18 (instruccion)


Estado 121

   23 instruccion: asignacion_elemento ';' •

    $default  reduce usando la regla 23 (instruccion)


Estado 122

  147 postfix: postfix '.' • TOKEN_LENGTH
  148        | postfix '.' • TOKEN_ADD '(' expr ')'
  149        | postfix '.' • TOKEN_IDENTIFIER '(' expr ')'
  150        | postfix '.' • TOKEN_IDENTIFIER '(' ')'

    TOKEN_IDENTIFIER  desplazar e ir al estado 205
    TOKEN_LENGTH      desplazar e ir al estado 206
    TOKEN_ADD         desplazar e ir al estado 207


Estado 123

   24 instruccion: postfix ';' •

    $default  reduce usando la regla 24 (instruccion)


Estado 124

  146 postfix: postfix '[' • expr ']'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 208
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 125

   98 var_decl: tipoPrimitivo TOKEN_IDENTIFIER • '=' expr
   99         | tipoPrimitivo TOKEN_IDENTIFIER •
  182 funcion_declaracion: tipoPrimitivo TOKEN_IDENTIFIER • '(' param_opt ')' bloque

    '('  desplazar e ir al estado 209
    '='  desplazar e ir al estado 210

    $default  reduce usando la regla 99 (var_decl)


Estado 126

   96 brackets_seq: '[' • ']'

    ']'  desplazar e ir al estado 211


Estado 127

   91 array_decl_local: tipoPrimitivo brackets_seq • TOKEN_IDENTIFIER '=' TOKEN_NEW tipoPrimitivo dims_expr_list
   92                 | tipoPrimitivo brackets_seq • TOKEN_IDENTIFIER '=' '{' lista_Expr '}'
   93                 | tipoPrimitivo brackets_seq • TOKEN_IDENTIFIER '=' bloque2D
   94                 | tipoPrimitivo brackets_seq • TOKEN_IDENTIFIER '=' '{' lista_bloques2D '}'
   95                 | tipoPrimitivo brackets_seq • TOKEN_IDENTIFIER '=' expr
   97 brackets_seq: brackets_seq • '[' ']'
  183 funcion_declaracion: tipoPrimitivo brackets_seq • TOKEN_IDENTIFIER '(' param_opt ')' bloque

    TOKEN_IDENTIFIER  desplazar e ir al estado 212
    '['               desplazar e ir al estado 213


Estado 128

   21 instruccion: return_stmt ';' •

    $default  reduce usando la regla 21 (instruccion)


Estado 129

   78 lista_Expr: lista_Expr • ',' expr
   80 imprimir: TOKEN_PRINT '(' lista_Expr • ')'

    ')'  desplazar e ir al estado 214
    ','  desplazar e ir al estado 215


Estado 130

   79 lista_Expr: expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 79 (lista_Expr)


Estado 131

  163 atom: TOKEN_DSTRING '.' TOKEN_VALUE_OF • '(' expr ')'

    '('  desplazar e ir al estado 216


Estado 132

  164 atom: TOKEN_DSTRING '.' TOKEN_JOIN • '(' expr ',' expr ')'
  165     | TOKEN_DSTRING '.' TOKEN_JOIN • '(' expr ',' join_variadic_args ')'

    '('  desplazar e ir al estado 217


Estado 133

   68 asignacion: TOKEN_IDENTIFIER TOKEN_PLUS_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 68 (asignacion)


Estado 134

   69 asignacion: TOKEN_IDENTIFIER TOKEN_MINUS_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 69 (asignacion)


Estado 135

   70 asignacion: TOKEN_IDENTIFIER TOKEN_MUL_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 70 (asignacion)


Estado 136

   71 asignacion: TOKEN_IDENTIFIER TOKEN_DIV_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 71 (asignacion)


Estado 137

   72 asignacion: TOKEN_IDENTIFIER TOKEN_MOD_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 72 (asignacion)


Estado 138

   73 asignacion: TOKEN_IDENTIFIER TOKEN_AND_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 73 (asignacion)


Estado 139

   74 asignacion: TOKEN_IDENTIFIER TOKEN_OR_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 74 (asignacion)


Estado 140

   75 asignacion: TOKEN_IDENTIFIER TOKEN_XOR_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 75 (asignacion)


Estado 141

   76 asignacion: TOKEN_IDENTIFIER TOKEN_SHL_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 76 (asignacion)


Estado 142

   77 asignacion: TOKEN_IDENTIFIER TOKEN_SHR_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 77 (asignacion)


Estado 143

   78 lista_Expr: lista_Expr • ',' expr
  203 argumentos_opt: lista_Expr •

    ','  desplazar e ir al estado 215

    $default  reduce usando la regla 203 (argumentos_opt)


Estado 144

  204 llamada_funcion: TOKEN_IDENTIFIER '(' argumentos_opt • ')'

    ')'  desplazar e ir al estado 218


Estado 145

   67 asignacion: TOKEN_IDENTIFIER '=' expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 67 (asignacion)


Estado 146

  121 indices_una: '[' expr • ']'
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ']'                  desplazar e ir al estado 219


Estado 147

  111 asignacion_elemento: TOKEN_IDENTIFIER indices_una TOKEN_PLUS_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 220
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 148

  112 asignacion_elemento: TOKEN_IDENTIFIER indices_una TOKEN_MINUS_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 221
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 149

  113 asignacion_elemento: TOKEN_IDENTIFIER indices_una TOKEN_MUL_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 222
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 150

  114 asignacion_elemento: TOKEN_IDENTIFIER indices_una TOKEN_DIV_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 223
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 151

  115 asignacion_elemento: TOKEN_IDENTIFIER indices_una TOKEN_MOD_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 224
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 152

  109 asignacion_elemento: TOKEN_IDENTIFIER indices_una '=' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 225
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 153

  122 indices_multi: indices_una indices_una •

    $default  reduce usando la regla 122 (indices_multi)


Estado 154

  116 asignacion_elemento: TOKEN_IDENTIFIER indices_multi TOKEN_PLUS_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 226
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 155

  117 asignacion_elemento: TOKEN_IDENTIFIER indices_multi TOKEN_MINUS_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 227
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 156

  118 asignacion_elemento: TOKEN_IDENTIFIER indices_multi TOKEN_MUL_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 228
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 157

  119 asignacion_elemento: TOKEN_IDENTIFIER indices_multi TOKEN_DIV_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 229
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 158

  120 asignacion_elemento: TOKEN_IDENTIFIER indices_multi TOKEN_MOD_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 230
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 159

  110 asignacion_elemento: TOKEN_IDENTIFIER indices_multi '=' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 231
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 160

  123 indices_multi: indices_multi indices_una •

    $default  reduce usando la regla 123 (indices_multi)


Estado 161

  100 final_var_decl: TOKEN_FINAL tipoPrimitivo TOKEN_IDENTIFIER • '=' expr

    '='  desplazar e ir al estado 232


Estado 162

   82 imprimir: TOKEN_SYSTEM_OUT_PRINTLN '(' ')' •

    $default  reduce usando la regla 82 (imprimir)


Estado 163

   78 lista_Expr: lista_Expr • ',' expr
   81 imprimir: TOKEN_SYSTEM_OUT_PRINTLN '(' lista_Expr • ')'

    ')'  desplazar e ir al estado 233
    ','  desplazar e ir al estado 215


Estado 164

   84 imprimir: TOKEN_SYSTEM_OUT_PRINT '(' ')' •

    $default  reduce usando la regla 84 (imprimir)


Estado 165

   78 lista_Expr: lista_Expr • ',' expr
   83 imprimir: TOKEN_SYSTEM_OUT_PRINT '(' lista_Expr • ')'

    ')'  desplazar e ir al estado 234
    ','  desplazar e ir al estado 215


Estado 166

  160 atom: TOKEN_INTEGER_CLASS '.' TOKEN_PARSE_INT • '(' expr ')'

    '('  desplazar e ir al estado 235


Estado 167

  161 atom: TOKEN_DOUBLE_CLASS '.' TOKEN_PARSE_DOUBLE • '(' expr ')'

    '('  desplazar e ir al estado 236


Estado 168

  162 atom: TOKEN_FLOAT_CLASS '.' TOKEN_PARSE_FLOAT • '(' expr ')'

    '('  desplazar e ir al estado 237


Estado 169

  159 atom: TOKEN_ARRAYS '.' TOKEN_INDEXOF • '(' expr ',' expr ')'

    '('  desplazar e ir al estado 238


Estado 170

   28 if_statement: TOKEN_IF '(' expr • ')' bloque
   29             | TOKEN_IF '(' expr • ')' bloque TOKEN_ELSE bloque
   30             | TOKEN_IF '(' expr • ')' bloque TOKEN_ELSE if_statement
   31             | TOKEN_IF '(' expr • ')' instruccion_simple ';'
   32             | TOKEN_IF '(' expr • ')' instruccion_simple ';' TOKEN_ELSE bloque
   33             | TOKEN_IF '(' expr • ')' instruccion_simple ';' TOKEN_ELSE if_statement
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ')'                  desplazar e ir al estado 239


Estado 171

   34 switch_statement: TOKEN_SWITCH '(' expr • ')' '{' case_list '}'
   35                 | TOKEN_SWITCH '(' expr • ')' '{' case_list default_case '}'
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ')'                  desplazar e ir al estado 240


Estado 172

   36 while_statement: TOKEN_WHILE '(' expr • ')' bloque
   37                | TOKEN_WHILE '(' expr • ')' instruccion_simple
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ')'                  desplazar e ir al estado 241


Estado 173

   67 asignacion: TOKEN_IDENTIFIER • '=' expr
   68           | TOKEN_IDENTIFIER • TOKEN_PLUS_ASSIGN expr
   69           | TOKEN_IDENTIFIER • TOKEN_MINUS_ASSIGN expr
   70           | TOKEN_IDENTIFIER • TOKEN_MUL_ASSIGN expr
   71           | TOKEN_IDENTIFIER • TOKEN_DIV_ASSIGN expr
   72           | TOKEN_IDENTIFIER • TOKEN_MOD_ASSIGN expr
   73           | TOKEN_IDENTIFIER • TOKEN_AND_ASSIGN expr
   74           | TOKEN_IDENTIFIER • TOKEN_OR_ASSIGN expr
   75           | TOKEN_IDENTIFIER • TOKEN_XOR_ASSIGN expr
   76           | TOKEN_IDENTIFIER • TOKEN_SHL_ASSIGN expr
   77           | TOKEN_IDENTIFIER • TOKEN_SHR_ASSIGN expr

    TOKEN_PLUS_ASSIGN   desplazar e ir al estado 71
    TOKEN_MINUS_ASSIGN  desplazar e ir al estado 72
    TOKEN_MUL_ASSIGN    desplazar e ir al estado 73
    TOKEN_DIV_ASSIGN    desplazar e ir al estado 74
    TOKEN_MOD_ASSIGN    desplazar e ir al estado 75
    TOKEN_AND_ASSIGN    desplazar e ir al estado 76
    TOKEN_OR_ASSIGN     desplazar e ir al estado 77
    TOKEN_XOR_ASSIGN    desplazar e ir al estado 78
    TOKEN_SHL_ASSIGN    desplazar e ir al estado 79
    TOKEN_SHR_ASSIGN    desplazar e ir al estado 80
    '='                 desplazar e ir al estado 82


Estado 174

   42 for_statement: TOKEN_FOR '(' asignacion • ';' expr ';' incremento ')' bloque
   43              | TOKEN_FOR '(' asignacion • ';' expr ';' incremento ')' instruccion_simple

    ';'  desplazar e ir al estado 242


Estado 175

   38 for_statement: TOKEN_FOR '(' declaracion_var • ';' expr ';' incremento ')' bloque_for
   39              | TOKEN_FOR '(' declaracion_var • ';' expr ';' incremento ')' instruccion_simple
   40              | TOKEN_FOR '(' declaracion_var • ';' expr ';' ')' bloque_for
   41              | TOKEN_FOR '(' declaracion_var • ';' expr ';' ')' instruccion_simple

    ';'  desplazar e ir al estado 243


Estado 176

   91 array_decl_local: tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '=' TOKEN_NEW tipoPrimitivo dims_expr_list
   92                 | tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '=' '{' lista_Expr '}'
   93                 | tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '=' bloque2D
   94                 | tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '=' '{' lista_bloques2D '}'
   95                 | tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '=' expr
   98 var_decl: tipoPrimitivo • TOKEN_IDENTIFIER '=' expr
   99         | tipoPrimitivo • TOKEN_IDENTIFIER
  200 for_each_statement: TOKEN_FOR '(' tipoPrimitivo • TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque
  201                   | TOKEN_FOR '(' tipoPrimitivo • '[' ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque

    TOKEN_IDENTIFIER  desplazar e ir al estado 244
    '['               desplazar e ir al estado 245

    brackets_seq  ir al estado 246


Estado 177

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  142     | TOKEN_NOT expr •

    $default  reduce usando la regla 142 (expr)


Estado 178

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  143     | '-' expr •

    $default  reduce usando la regla 143 (expr)


Estado 179

  132 expr: expr TOKEN_SHIFT_LEFT • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 247
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 180

  133 expr: expr TOKEN_SHIFT_RIGHT • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 248
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 181

  134 expr: expr TOKEN_EQUAL • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 249
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 182

  135 expr: expr TOKEN_NOT_EQUAL • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 250
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 183

  136 expr: expr TOKEN_GREATER • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 251
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 184

  137 expr: expr TOKEN_LESS • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 252
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 185

  138 expr: expr TOKEN_GREATER_EQUAL • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 253
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 186

  139 expr: expr TOKEN_LESS_EQUAL • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 254
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 187

  140 expr: expr TOKEN_AND • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 255
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 188

  141 expr: expr TOKEN_OR • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 256
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 189

  124 expr: expr '+' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 257
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 190

  125 expr: expr '-' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 258
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 191

  129 expr: expr '&' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 259
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 192

  131 expr: expr '^' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 260
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 193

  130 expr: expr '|' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 261
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 194

  126 expr: expr '*' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 262
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 195

  127 expr: expr '/' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 263
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 196

  128 expr: expr '%' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 264
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 197

  184 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC TOKEN_DVOID • TOKEN_IDENTIFIER '(' main_params_opt ')' bloque

    TOKEN_IDENTIFIER  desplazar e ir al estado 265


Estado 198

   87 bloque_for: '{' • lSentencia '}'

    error                     desplazar e ir al estado 1
    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 6
    TOKEN_UNSIGNED_INTEGER    desplazar e ir al estado 7
    TOKEN_REAL                desplazar e ir al estado 8
    TOKEN_REAL_FLOAT          desplazar e ir al estado 9
    TOKEN_STRING              desplazar e ir al estado 10
    TOKEN_IDENTIFIER          desplazar e ir al estado 11
    TOKEN_TRUE                desplazar e ir al estado 12
    TOKEN_FALSE               desplazar e ir al estado 13
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_CHAR_LITERAL        desplazar e ir al estado 16
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_SYSTEM_OUT_PRINT    desplazar e ir al estado 19
    TOKEN_DVOID               desplazar e ir al estado 20
    TOKEN_NULL                desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS       desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS        desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS         desplazar e ir al estado 24
    TOKEN_ARRAYS              desplazar e ir al estado 25
    TOKEN_IF                  desplazar e ir al estado 26
    TOKEN_SWITCH              desplazar e ir al estado 27
    TOKEN_BREAK               desplazar e ir al estado 28
    TOKEN_WHILE               desplazar e ir al estado 29
    TOKEN_FOR                 desplazar e ir al estado 30
    TOKEN_CONTINUE            desplazar e ir al estado 31
    TOKEN_RETURN              desplazar e ir al estado 32
    TOKEN_PUBLIC              desplazar e ir al estado 33
    TOKEN_REPEAT              desplazar e ir al estado 34
    '('                       desplazar e ir al estado 35
    '{'                       desplazar e ir al estado 36

    lSentencia           ir al estado 266
    instruccion          ir al estado 39
    if_statement         ir al estado 40
    switch_statement     ir al estado 41
    while_statement      ir al estado 42
    for_statement        ir al estado 43
    repeat_statement     ir al estado 44
    break_statement      ir al estado 45
    continue_statement   ir al estado 46
    asignacion           ir al estado 47
    imprimir             ir al estado 48
    bloque               ir al estado 49
    declaracion_var      ir al estado 50
    array_decl_local     ir al estado 51
    var_decl             ir al estado 52
    final_var_decl       ir al estado 53
    asignacion_elemento  ir al estado 54
    postfix              ir al estado 55
    unary                ir al estado 56
    atom                 ir al estado 57
    primitivo            ir al estado 58
    tipoPrimitivo        ir al estado 59
    funcion_declaracion  ir al estado 60
    main_declaracion     ir al estado 61
    return_stmt          ir al estado 62
    for_each_statement   ir al estado 63
    llamada_funcion      ir al estado 64


Estado 199

   44 repeat_statement: TOKEN_REPEAT expr bloque_for •

    $default  reduce usando la regla 44 (repeat_statement)


Estado 200

  156 atom: '(' expr ')' •

    $default  reduce usando la regla 156 (atom)


Estado 201

  154 unary: '(' tipoPrimitivo ')' • postfix

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    '('                     desplazar e ir al estado 35

    postfix          ir al estado 267
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 202

    6 lSentencia: error '}' •
   27 instruccion: error '}' •
   86 bloque: '{' error '}' •

    $end                      reduce usando la regla 86 (bloque)
    error                     reduce usando la regla 6 (lSentencia)
    error                     [reduce usando la regla 27 (instruccion)]
    error                     [reduce usando la regla 86 (bloque)]
    TOKEN_PRINT               reduce usando la regla 6 (lSentencia)
    TOKEN_PRINT               [reduce usando la regla 27 (instruccion)]
    TOKEN_PRINT               [reduce usando la regla 86 (bloque)]
    TOKEN_DINT                reduce usando la regla 6 (lSentencia)
    TOKEN_DINT                [reduce usando la regla 27 (instruccion)]
    TOKEN_DINT                [reduce usando la regla 86 (bloque)]
    TOKEN_DFLOAT              reduce usando la regla 6 (lSentencia)
    TOKEN_DFLOAT              [reduce usando la regla 27 (instruccion)]
    TOKEN_DFLOAT              [reduce usando la regla 86 (bloque)]
    TOKEN_DDOUBLE             reduce usando la regla 6 (lSentencia)
    TOKEN_DDOUBLE             [reduce usando la regla 27 (instruccion)]
    TOKEN_DDOUBLE             [reduce usando la regla 86 (bloque)]
    TOKEN_DSTRING             reduce usando la regla 6 (lSentencia)
    TOKEN_DSTRING             [reduce usando la regla 27 (instruccion)]
    TOKEN_DSTRING             [reduce usando la regla 86 (bloque)]
    TOKEN_UNSIGNED_INTEGER    reduce usando la regla 6 (lSentencia)
    TOKEN_UNSIGNED_INTEGER    [reduce usando la regla 27 (instruccion)]
    TOKEN_UNSIGNED_INTEGER    [reduce usando la regla 86 (bloque)]
    TOKEN_REAL                reduce usando la regla 6 (lSentencia)
    TOKEN_REAL                [reduce usando la regla 27 (instruccion)]
    TOKEN_REAL                [reduce usando la regla 86 (bloque)]
    TOKEN_REAL_FLOAT          reduce usando la regla 6 (lSentencia)
    TOKEN_REAL_FLOAT          [reduce usando la regla 27 (instruccion)]
    TOKEN_REAL_FLOAT          [reduce usando la regla 86 (bloque)]
    TOKEN_STRING              reduce usando la regla 6 (lSentencia)
    TOKEN_STRING              [reduce usando la regla 27 (instruccion)]
    TOKEN_STRING              [reduce usando la regla 86 (bloque)]
    TOKEN_IDENTIFIER          reduce usando la regla 6 (lSentencia)
    TOKEN_IDENTIFIER          [reduce usando la regla 27 (instruccion)]
    TOKEN_IDENTIFIER          [reduce usando la regla 86 (bloque)]
    TOKEN_TRUE                reduce usando la regla 6 (lSentencia)
    TOKEN_TRUE                [reduce usando la regla 27 (instruccion)]
    TOKEN_TRUE                [reduce usando la regla 86 (bloque)]
    TOKEN_FALSE               reduce usando la regla 6 (lSentencia)
    TOKEN_FALSE               [reduce usando la regla 27 (instruccion)]
    TOKEN_FALSE               [reduce usando la regla 86 (bloque)]
    TOKEN_DBOOLEAN            reduce usando la regla 6 (lSentencia)
    TOKEN_DBOOLEAN            [reduce usando la regla 27 (instruccion)]
    TOKEN_DBOOLEAN            [reduce usando la regla 86 (bloque)]
    TOKEN_DCHAR               reduce usando la regla 6 (lSentencia)
    TOKEN_DCHAR               [reduce usando la regla 27 (instruccion)]
    TOKEN_DCHAR               [reduce usando la regla 86 (bloque)]
    TOKEN_CHAR_LITERAL        reduce usando la regla 6 (lSentencia)
    TOKEN_CHAR_LITERAL        [reduce usando la regla 27 (instruccion)]
    TOKEN_CHAR_LITERAL        [reduce usando la regla 86 (bloque)]
    TOKEN_FINAL               reduce usando la regla 6 (lSentencia)
    TOKEN_FINAL               [reduce usando la regla 27 (instruccion)]
    TOKEN_FINAL               [reduce usando la regla 86 (bloque)]
    TOKEN_SYSTEM_OUT_PRINTLN  reduce usando la regla 6 (lSentencia)
    TOKEN_SYSTEM_OUT_PRINTLN  [reduce usando la regla 27 (instruccion)]
    TOKEN_SYSTEM_OUT_PRINTLN  [reduce usando la regla 86 (bloque)]
    TOKEN_SYSTEM_OUT_PRINT    reduce usando la regla 6 (lSentencia)
    TOKEN_SYSTEM_OUT_PRINT    [reduce usando la regla 27 (instruccion)]
    TOKEN_SYSTEM_OUT_PRINT    [reduce usando la regla 86 (bloque)]
    TOKEN_DVOID               reduce usando la regla 6 (lSentencia)
    TOKEN_DVOID               [reduce usando la regla 27 (instruccion)]
    TOKEN_DVOID               [reduce usando la regla 86 (bloque)]
    TOKEN_COMMENT_LINE        reduce usando la regla 6 (lSentencia)
    TOKEN_COMMENT_LINE        [reduce usando la regla 27 (instruccion)]
    TOKEN_COMMENT_LINE        [reduce usando la regla 86 (bloque)]
    TOKEN_COMMENT_MULTI       reduce usando la regla 6 (lSentencia)
    TOKEN_COMMENT_MULTI       [reduce usando la regla 27 (instruccion)]
    TOKEN_COMMENT_MULTI       [reduce usando la regla 86 (bloque)]
    TOKEN_NULL                reduce usando la regla 6 (lSentencia)
    TOKEN_NULL                [reduce usando la regla 27 (instruccion)]
    TOKEN_NULL                [reduce usando la regla 86 (bloque)]
    TOKEN_INTEGER_CLASS       reduce usando la regla 6 (lSentencia)
    TOKEN_INTEGER_CLASS       [reduce usando la regla 27 (instruccion)]
    TOKEN_INTEGER_CLASS       [reduce usando la regla 86 (bloque)]
    TOKEN_DOUBLE_CLASS        reduce usando la regla 6 (lSentencia)
    TOKEN_DOUBLE_CLASS        [reduce usando la regla 27 (instruccion)]
    TOKEN_DOUBLE_CLASS        [reduce usando la regla 86 (bloque)]
    TOKEN_FLOAT_CLASS         reduce usando la regla 6 (lSentencia)
    TOKEN_FLOAT_CLASS         [reduce usando la regla 27 (instruccion)]
    TOKEN_FLOAT_CLASS         [reduce usando la regla 86 (bloque)]
    TOKEN_ARRAYS              reduce usando la regla 6 (lSentencia)
    TOKEN_ARRAYS              [reduce usando la regla 27 (instruccion)]
    TOKEN_ARRAYS              [reduce usando la regla 86 (bloque)]
    TOKEN_IF                  reduce usando la regla 6 (lSentencia)
    TOKEN_IF                  [reduce usando la regla 27 (instruccion)]
    TOKEN_IF                  [reduce usando la regla 86 (bloque)]
    TOKEN_ELSE                reduce usando la regla 86 (bloque)
    TOKEN_SWITCH              reduce usando la regla 6 (lSentencia)
    TOKEN_SWITCH              [reduce usando la regla 27 (instruccion)]
    TOKEN_SWITCH              [reduce usando la regla 86 (bloque)]
    TOKEN_CASE                reduce usando la regla 86 (bloque)
    TOKEN_DEFAULT             reduce usando la regla 86 (bloque)
    TOKEN_BREAK               reduce usando la regla 6 (lSentencia)
    TOKEN_BREAK               [reduce usando la regla 27 (instruccion)]
    TOKEN_BREAK               [reduce usando la regla 86 (bloque)]
    TOKEN_WHILE               reduce usando la regla 6 (lSentencia)
    TOKEN_WHILE               [reduce usando la regla 27 (instruccion)]
    TOKEN_WHILE               [reduce usando la regla 86 (bloque)]
    TOKEN_FOR                 reduce usando la regla 6 (lSentencia)
    TOKEN_FOR                 [reduce usando la regla 27 (instruccion)]
    TOKEN_FOR                 [reduce usando la regla 86 (bloque)]
    TOKEN_CONTINUE            reduce usando la regla 6 (lSentencia)
    TOKEN_CONTINUE            [reduce usando la regla 27 (instruccion)]
    TOKEN_CONTINUE            [reduce usando la regla 86 (bloque)]
    TOKEN_RETURN              reduce usando la regla 6 (lSentencia)
    TOKEN_RETURN              [reduce usando la regla 27 (instruccion)]
    TOKEN_RETURN              [reduce usando la regla 86 (bloque)]
    TOKEN_PUBLIC              reduce usando la regla 6 (lSentencia)
    TOKEN_PUBLIC              [reduce usando la regla 27 (instruccion)]
    TOKEN_PUBLIC              [reduce usando la regla 86 (bloque)]
    TOKEN_REPEAT              reduce usando la regla 6 (lSentencia)
    TOKEN_REPEAT              [reduce usando la regla 27 (instruccion)]
    TOKEN_REPEAT              [reduce usando la regla 86 (bloque)]
    '}'                       reduce usando la regla 6 (lSentencia)
    '}'                       [reduce usando la regla 27 (instruccion)]
    '}'                       [reduce usando la regla 86 (bloque)]
    '('                       reduce usando la regla 6 (lSentencia)
    '('                       [reduce usando la regla 27 (instruccion)]
    '('                       [reduce usando la regla 86 (bloque)]
    '{'                       reduce usando la regla 6 (lSentencia)
    '{'                       [reduce usando la regla 27 (instruccion)]
    '{'                       [reduce usando la regla 86 (bloque)]
    $default                  reduce usando la regla 6 (lSentencia)


Estado 203

   85 bloque: '{' lSentencia '}' •

    $default  reduce usando la regla 85 (bloque)


Estado 204

    5 lSentencia: lSentencia error '}' •
   27 instruccion: error '}' •

    $end                      reduce usando la regla 5 (lSentencia)
    $end                      [reduce usando la regla 27 (instruccion)]
    error                     reduce usando la regla 5 (lSentencia)
    error                     [reduce usando la regla 27 (instruccion)]
    TOKEN_PRINT               reduce usando la regla 5 (lSentencia)
    TOKEN_PRINT               [reduce usando la regla 27 (instruccion)]
    TOKEN_DINT                reduce usando la regla 5 (lSentencia)
    TOKEN_DINT                [reduce usando la regla 27 (instruccion)]
    TOKEN_DFLOAT              reduce usando la regla 5 (lSentencia)
    TOKEN_DFLOAT              [reduce usando la regla 27 (instruccion)]
    TOKEN_DDOUBLE             reduce usando la regla 5 (lSentencia)
    TOKEN_DDOUBLE             [reduce usando la regla 27 (instruccion)]
    TOKEN_DSTRING             reduce usando la regla 5 (lSentencia)
    TOKEN_DSTRING             [reduce usando la regla 27 (instruccion)]
    TOKEN_UNSIGNED_INTEGER    reduce usando la regla 5 (lSentencia)
    TOKEN_UNSIGNED_INTEGER    [reduce usando la regla 27 (instruccion)]
    TOKEN_REAL                reduce usando la regla 5 (lSentencia)
    TOKEN_REAL                [reduce usando la regla 27 (instruccion)]
    TOKEN_REAL_FLOAT          reduce usando la regla 5 (lSentencia)
    TOKEN_REAL_FLOAT          [reduce usando la regla 27 (instruccion)]
    TOKEN_STRING              reduce usando la regla 5 (lSentencia)
    TOKEN_STRING              [reduce usando la regla 27 (instruccion)]
    TOKEN_IDENTIFIER          reduce usando la regla 5 (lSentencia)
    TOKEN_IDENTIFIER          [reduce usando la regla 27 (instruccion)]
    TOKEN_TRUE                reduce usando la regla 5 (lSentencia)
    TOKEN_TRUE                [reduce usando la regla 27 (instruccion)]
    TOKEN_FALSE               reduce usando la regla 5 (lSentencia)
    TOKEN_FALSE               [reduce usando la regla 27 (instruccion)]
    TOKEN_DBOOLEAN            reduce usando la regla 5 (lSentencia)
    TOKEN_DBOOLEAN            [reduce usando la regla 27 (instruccion)]
    TOKEN_DCHAR               reduce usando la regla 5 (lSentencia)
    TOKEN_DCHAR               [reduce usando la regla 27 (instruccion)]
    TOKEN_CHAR_LITERAL        reduce usando la regla 5 (lSentencia)
    TOKEN_CHAR_LITERAL        [reduce usando la regla 27 (instruccion)]
    TOKEN_FINAL               reduce usando la regla 5 (lSentencia)
    TOKEN_FINAL               [reduce usando la regla 27 (instruccion)]
    TOKEN_SYSTEM_OUT_PRINTLN  reduce usando la regla 5 (lSentencia)
    TOKEN_SYSTEM_OUT_PRINTLN  [reduce usando la regla 27 (instruccion)]
    TOKEN_SYSTEM_OUT_PRINT    reduce usando la regla 5 (lSentencia)
    TOKEN_SYSTEM_OUT_PRINT    [reduce usando la regla 27 (instruccion)]
    TOKEN_DVOID               reduce usando la regla 5 (lSentencia)
    TOKEN_DVOID               [reduce usando la regla 27 (instruccion)]
    TOKEN_COMMENT_LINE        reduce usando la regla 5 (lSentencia)
    TOKEN_COMMENT_LINE        [reduce usando la regla 27 (instruccion)]
    TOKEN_COMMENT_MULTI       reduce usando la regla 5 (lSentencia)
    TOKEN_COMMENT_MULTI       [reduce usando la regla 27 (instruccion)]
    TOKEN_NULL                reduce usando la regla 5 (lSentencia)
    TOKEN_NULL                [reduce usando la regla 27 (instruccion)]
    TOKEN_INTEGER_CLASS       reduce usando la regla 5 (lSentencia)
    TOKEN_INTEGER_CLASS       [reduce usando la regla 27 (instruccion)]
    TOKEN_DOUBLE_CLASS        reduce usando la regla 5 (lSentencia)
    TOKEN_DOUBLE_CLASS        [reduce usando la regla 27 (instruccion)]
    TOKEN_FLOAT_CLASS         reduce usando la regla 5 (lSentencia)
    TOKEN_FLOAT_CLASS         [reduce usando la regla 27 (instruccion)]
    TOKEN_ARRAYS              reduce usando la regla 5 (lSentencia)
    TOKEN_ARRAYS              [reduce usando la regla 27 (instruccion)]
    TOKEN_IF                  reduce usando la regla 5 (lSentencia)
    TOKEN_IF                  [reduce usando la regla 27 (instruccion)]
    TOKEN_SWITCH              reduce usando la regla 5 (lSentencia)
    TOKEN_SWITCH              [reduce usando la regla 27 (instruccion)]
    TOKEN_BREAK               reduce usando la regla 5 (lSentencia)
    TOKEN_BREAK               [reduce usando la regla 27 (instruccion)]
    TOKEN_WHILE               reduce usando la regla 5 (lSentencia)
    TOKEN_WHILE               [reduce usando la regla 27 (instruccion)]
    TOKEN_FOR                 reduce usando la regla 5 (lSentencia)
    TOKEN_FOR                 [reduce usando la regla 27 (instruccion)]
    TOKEN_CONTINUE            reduce usando la regla 5 (lSentencia)
    TOKEN_CONTINUE            [reduce usando la regla 27 (instruccion)]
    TOKEN_RETURN              reduce usando la regla 5 (lSentencia)
    TOKEN_RETURN              [reduce usando la regla 27 (instruccion)]
    TOKEN_PUBLIC              reduce usando la regla 5 (lSentencia)
    TOKEN_PUBLIC              [reduce usando la regla 27 (instruccion)]
    TOKEN_REPEAT              reduce usando la regla 5 (lSentencia)
    TOKEN_REPEAT              [reduce usando la regla 27 (instruccion)]
    '}'                       reduce usando la regla 5 (lSentencia)
    '}'                       [reduce usando la regla 27 (instruccion)]
    '('                       reduce usando la regla 5 (lSentencia)
    '('                       [reduce usando la regla 27 (instruccion)]
    '{'                       reduce usando la regla 5 (lSentencia)
    '{'                       [reduce usando la regla 27 (instruccion)]
    $default                  reduce usando la regla 5 (lSentencia)


Estado 205

  149 postfix: postfix '.' TOKEN_IDENTIFIER • '(' expr ')'
  150        | postfix '.' TOKEN_IDENTIFIER • '(' ')'

    '('  desplazar e ir al estado 268


Estado 206

  147 postfix: postfix '.' TOKEN_LENGTH •

    $default  reduce usando la regla 147 (postfix)


Estado 207

  148 postfix: postfix '.' TOKEN_ADD • '(' expr ')'

    '('  desplazar e ir al estado 269


Estado 208

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  146 postfix: postfix '[' expr • ']'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ']'                  desplazar e ir al estado 270


Estado 209

  182 funcion_declaracion: tipoPrimitivo TOKEN_IDENTIFIER '(' • param_opt ')' bloque

    TOKEN_DINT      desplazar e ir al estado 3
    TOKEN_DFLOAT    desplazar e ir al estado 4
    TOKEN_DDOUBLE   desplazar e ir al estado 5
    TOKEN_DSTRING   desplazar e ir al estado 86
    TOKEN_DBOOLEAN  desplazar e ir al estado 14
    TOKEN_DCHAR     desplazar e ir al estado 15
    TOKEN_DVOID     desplazar e ir al estado 20

    $default  reduce usando la regla 192 (param_opt)

    tipoPrimitivo     ir al estado 271
    param_opt         ir al estado 272
    lista_parametros  ir al estado 273


Estado 210

   98 var_decl: tipoPrimitivo TOKEN_IDENTIFIER '=' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 274
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 211

   96 brackets_seq: '[' ']' •

    $default  reduce usando la regla 96 (brackets_seq)


Estado 212

   91 array_decl_local: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER • '=' TOKEN_NEW tipoPrimitivo dims_expr_list
   92                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER • '=' '{' lista_Expr '}'
   93                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER • '=' bloque2D
   94                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER • '=' '{' lista_bloques2D '}'
   95                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER • '=' expr
  183 funcion_declaracion: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER • '(' param_opt ')' bloque

    '('  desplazar e ir al estado 275
    '='  desplazar e ir al estado 276


Estado 213

   97 brackets_seq: brackets_seq '[' • ']'

    ']'  desplazar e ir al estado 277


Estado 214

   80 imprimir: TOKEN_PRINT '(' lista_Expr ')' •

    $default  reduce usando la regla 80 (imprimir)


Estado 215

   78 lista_Expr: lista_Expr ',' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 278
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 216

  163 atom: TOKEN_DSTRING '.' TOKEN_VALUE_OF '(' • expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 279
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 217

  164 atom: TOKEN_DSTRING '.' TOKEN_JOIN '(' • expr ',' expr ')'
  165     | TOKEN_DSTRING '.' TOKEN_JOIN '(' • expr ',' join_variadic_args ')'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 280
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 218

  204 llamada_funcion: TOKEN_IDENTIFIER '(' argumentos_opt ')' •

    $default  reduce usando la regla 204 (llamada_funcion)


Estado 219

  121 indices_una: '[' expr ']' •

    $default  reduce usando la regla 121 (indices_una)


Estado 220

  111 asignacion_elemento: TOKEN_IDENTIFIER indices_una TOKEN_PLUS_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 111 (asignacion_elemento)


Estado 221

  112 asignacion_elemento: TOKEN_IDENTIFIER indices_una TOKEN_MINUS_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 112 (asignacion_elemento)


Estado 222

  113 asignacion_elemento: TOKEN_IDENTIFIER indices_una TOKEN_MUL_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 113 (asignacion_elemento)


Estado 223

  114 asignacion_elemento: TOKEN_IDENTIFIER indices_una TOKEN_DIV_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 114 (asignacion_elemento)


Estado 224

  115 asignacion_elemento: TOKEN_IDENTIFIER indices_una TOKEN_MOD_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 115 (asignacion_elemento)


Estado 225

  109 asignacion_elemento: TOKEN_IDENTIFIER indices_una '=' expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 109 (asignacion_elemento)


Estado 226

  116 asignacion_elemento: TOKEN_IDENTIFIER indices_multi TOKEN_PLUS_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 116 (asignacion_elemento)


Estado 227

  117 asignacion_elemento: TOKEN_IDENTIFIER indices_multi TOKEN_MINUS_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 117 (asignacion_elemento)


Estado 228

  118 asignacion_elemento: TOKEN_IDENTIFIER indices_multi TOKEN_MUL_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 118 (asignacion_elemento)


Estado 229

  119 asignacion_elemento: TOKEN_IDENTIFIER indices_multi TOKEN_DIV_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 119 (asignacion_elemento)


Estado 230

  120 asignacion_elemento: TOKEN_IDENTIFIER indices_multi TOKEN_MOD_ASSIGN expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 120 (asignacion_elemento)


Estado 231

  110 asignacion_elemento: TOKEN_IDENTIFIER indices_multi '=' expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 110 (asignacion_elemento)


Estado 232

  100 final_var_decl: TOKEN_FINAL tipoPrimitivo TOKEN_IDENTIFIER '=' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 281
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 233

   81 imprimir: TOKEN_SYSTEM_OUT_PRINTLN '(' lista_Expr ')' •

    $default  reduce usando la regla 81 (imprimir)


Estado 234

   83 imprimir: TOKEN_SYSTEM_OUT_PRINT '(' lista_Expr ')' •

    $default  reduce usando la regla 83 (imprimir)


Estado 235

  160 atom: TOKEN_INTEGER_CLASS '.' TOKEN_PARSE_INT '(' • expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 282
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 236

  161 atom: TOKEN_DOUBLE_CLASS '.' TOKEN_PARSE_DOUBLE '(' • expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 283
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 237

  162 atom: TOKEN_FLOAT_CLASS '.' TOKEN_PARSE_FLOAT '(' • expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 284
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 238

  159 atom: TOKEN_ARRAYS '.' TOKEN_INDEXOF '(' • expr ',' expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 285
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 239

   28 if_statement: TOKEN_IF '(' expr ')' • bloque
   29             | TOKEN_IF '(' expr ')' • bloque TOKEN_ELSE bloque
   30             | TOKEN_IF '(' expr ')' • bloque TOKEN_ELSE if_statement
   31             | TOKEN_IF '(' expr ')' • instruccion_simple ';'
   32             | TOKEN_IF '(' expr ')' • instruccion_simple ';' TOKEN_ELSE bloque
   33             | TOKEN_IF '(' expr ')' • instruccion_simple ';' TOKEN_ELSE if_statement

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 173
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_SYSTEM_OUT_PRINT    desplazar e ir al estado 19
    TOKEN_DVOID               desplazar e ir al estado 20
    '{'                       desplazar e ir al estado 36

    instruccion_simple  ir al estado 286
    asignacion          ir al estado 287
    imprimir            ir al estado 288
    bloque              ir al estado 289
    declaracion_var     ir al estado 290
    array_decl_local    ir al estado 51
    var_decl            ir al estado 52
    final_var_decl      ir al estado 53
    tipoPrimitivo       ir al estado 291


Estado 240

   34 switch_statement: TOKEN_SWITCH '(' expr ')' • '{' case_list '}'
   35                 | TOKEN_SWITCH '(' expr ')' • '{' case_list default_case '}'

    '{'  desplazar e ir al estado 292


Estado 241

   36 while_statement: TOKEN_WHILE '(' expr ')' • bloque
   37                | TOKEN_WHILE '(' expr ')' • instruccion_simple

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 173
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_SYSTEM_OUT_PRINT    desplazar e ir al estado 19
    TOKEN_DVOID               desplazar e ir al estado 20
    '{'                       desplazar e ir al estado 36

    instruccion_simple  ir al estado 293
    asignacion          ir al estado 287
    imprimir            ir al estado 288
    bloque              ir al estado 294
    declaracion_var     ir al estado 290
    array_decl_local    ir al estado 51
    var_decl            ir al estado 52
    final_var_decl      ir al estado 53
    tipoPrimitivo       ir al estado 291


Estado 242

   42 for_statement: TOKEN_FOR '(' asignacion ';' • expr ';' incremento ')' bloque
   43              | TOKEN_FOR '(' asignacion ';' • expr ';' incremento ')' instruccion_simple

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 295
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 243

   38 for_statement: TOKEN_FOR '(' declaracion_var ';' • expr ';' incremento ')' bloque_for
   39              | TOKEN_FOR '(' declaracion_var ';' • expr ';' incremento ')' instruccion_simple
   40              | TOKEN_FOR '(' declaracion_var ';' • expr ';' ')' bloque_for
   41              | TOKEN_FOR '(' declaracion_var ';' • expr ';' ')' instruccion_simple

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 296
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 244

   98 var_decl: tipoPrimitivo TOKEN_IDENTIFIER • '=' expr
   99         | tipoPrimitivo TOKEN_IDENTIFIER •
  200 for_each_statement: TOKEN_FOR '(' tipoPrimitivo TOKEN_IDENTIFIER • ':' TOKEN_IDENTIFIER ')' bloque

    ':'  desplazar e ir al estado 297
    '='  desplazar e ir al estado 210

    $default  reduce usando la regla 99 (var_decl)


Estado 245

   96 brackets_seq: '[' • ']'
  201 for_each_statement: TOKEN_FOR '(' tipoPrimitivo '[' • ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque

    ']'  desplazar e ir al estado 298


Estado 246

   91 array_decl_local: tipoPrimitivo brackets_seq • TOKEN_IDENTIFIER '=' TOKEN_NEW tipoPrimitivo dims_expr_list
   92                 | tipoPrimitivo brackets_seq • TOKEN_IDENTIFIER '=' '{' lista_Expr '}'
   93                 | tipoPrimitivo brackets_seq • TOKEN_IDENTIFIER '=' bloque2D
   94                 | tipoPrimitivo brackets_seq • TOKEN_IDENTIFIER '=' '{' lista_bloques2D '}'
   95                 | tipoPrimitivo brackets_seq • TOKEN_IDENTIFIER '=' expr
   97 brackets_seq: brackets_seq • '[' ']'

    TOKEN_IDENTIFIER  desplazar e ir al estado 299
    '['               desplazar e ir al estado 213


Estado 247

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr TOKEN_SHIFT_LEFT expr •
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    '*'  desplazar e ir al estado 194
    '/'  desplazar e ir al estado 195
    '%'  desplazar e ir al estado 196

    $default  reduce usando la regla 132 (expr)


Estado 248

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr TOKEN_SHIFT_RIGHT expr •
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    '*'  desplazar e ir al estado 194
    '/'  desplazar e ir al estado 195
    '%'  desplazar e ir al estado 196

    $default  reduce usando la regla 133 (expr)


Estado 249

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  134     | expr TOKEN_EQUAL expr •
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 134 (expr)


Estado 250

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  135     | expr TOKEN_NOT_EQUAL expr •
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 135 (expr)


Estado 251

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  136     | expr TOKEN_GREATER expr •
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 180
    '+'                desplazar e ir al estado 189
    '-'                desplazar e ir al estado 190
    '&'                desplazar e ir al estado 191
    '^'                desplazar e ir al estado 192
    '|'                desplazar e ir al estado 193
    '*'                desplazar e ir al estado 194
    '/'                desplazar e ir al estado 195
    '%'                desplazar e ir al estado 196

    $default  reduce usando la regla 136 (expr)


Estado 252

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  137     | expr TOKEN_LESS expr •
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 180
    '+'                desplazar e ir al estado 189
    '-'                desplazar e ir al estado 190
    '&'                desplazar e ir al estado 191
    '^'                desplazar e ir al estado 192
    '|'                desplazar e ir al estado 193
    '*'                desplazar e ir al estado 194
    '/'                desplazar e ir al estado 195
    '%'                desplazar e ir al estado 196

    $default  reduce usando la regla 137 (expr)


Estado 253

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr TOKEN_GREATER_EQUAL expr •
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 180
    '+'                desplazar e ir al estado 189
    '-'                desplazar e ir al estado 190
    '&'                desplazar e ir al estado 191
    '^'                desplazar e ir al estado 192
    '|'                desplazar e ir al estado 193
    '*'                desplazar e ir al estado 194
    '/'                desplazar e ir al estado 195
    '%'                desplazar e ir al estado 196

    $default  reduce usando la regla 138 (expr)


Estado 254

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  139     | expr TOKEN_LESS_EQUAL expr •
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 180
    '+'                desplazar e ir al estado 189
    '-'                desplazar e ir al estado 190
    '&'                desplazar e ir al estado 191
    '^'                desplazar e ir al estado 192
    '|'                desplazar e ir al estado 193
    '*'                desplazar e ir al estado 194
    '/'                desplazar e ir al estado 195
    '%'                desplazar e ir al estado 196

    $default  reduce usando la regla 139 (expr)


Estado 255

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  140     | expr TOKEN_AND expr •
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 140 (expr)


Estado 256

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  141     | expr TOKEN_OR expr •

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 141 (expr)


Estado 257

  124 expr: expr • '+' expr
  124     | expr '+' expr •
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 180
    '&'                desplazar e ir al estado 191
    '^'                desplazar e ir al estado 192
    '|'                desplazar e ir al estado 193
    '*'                desplazar e ir al estado 194
    '/'                desplazar e ir al estado 195
    '%'                desplazar e ir al estado 196

    $default  reduce usando la regla 124 (expr)


Estado 258

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  125     | expr '-' expr •
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 180
    '&'                desplazar e ir al estado 191
    '^'                desplazar e ir al estado 192
    '|'                desplazar e ir al estado 193
    '*'                desplazar e ir al estado 194
    '/'                desplazar e ir al estado 195
    '%'                desplazar e ir al estado 196

    $default  reduce usando la regla 125 (expr)


Estado 259

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  129     | expr '&' expr •
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 180
    '*'                desplazar e ir al estado 194
    '/'                desplazar e ir al estado 195
    '%'                desplazar e ir al estado 196

    $default  reduce usando la regla 129 (expr)


Estado 260

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  131     | expr '^' expr •
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 180
    '*'                desplazar e ir al estado 194
    '/'                desplazar e ir al estado 195
    '%'                desplazar e ir al estado 196

    $default  reduce usando la regla 131 (expr)


Estado 261

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  130     | expr '|' expr •
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 180
    '*'                desplazar e ir al estado 194
    '/'                desplazar e ir al estado 195
    '%'                desplazar e ir al estado 196

    $default  reduce usando la regla 130 (expr)


Estado 262

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  126     | expr '*' expr •
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    $default  reduce usando la regla 126 (expr)


Estado 263

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  127     | expr '/' expr •
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    $default  reduce usando la regla 127 (expr)


Estado 264

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  128     | expr '%' expr •
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    $default  reduce usando la regla 128 (expr)


Estado 265

  184 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC TOKEN_DVOID TOKEN_IDENTIFIER • '(' main_params_opt ')' bloque

    '('  desplazar e ir al estado 300


Estado 266

    2 lSentencia: lSentencia • instruccion
    3           | lSentencia • comentario
    5           | lSentencia • error '}'
   87 bloque_for: '{' lSentencia • '}'

    error                     desplazar e ir al estado 113
    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 6
    TOKEN_UNSIGNED_INTEGER    desplazar e ir al estado 7
    TOKEN_REAL                desplazar e ir al estado 8
    TOKEN_REAL_FLOAT          desplazar e ir al estado 9
    TOKEN_STRING              desplazar e ir al estado 10
    TOKEN_IDENTIFIER          desplazar e ir al estado 11
    TOKEN_TRUE                desplazar e ir al estado 12
    TOKEN_FALSE               desplazar e ir al estado 13
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_CHAR_LITERAL        desplazar e ir al estado 16
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_SYSTEM_OUT_PRINT    desplazar e ir al estado 19
    TOKEN_DVOID               desplazar e ir al estado 20
    TOKEN_COMMENT_LINE        desplazar e ir al estado 114
    TOKEN_COMMENT_MULTI       desplazar e ir al estado 115
    TOKEN_NULL                desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS       desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS        desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS         desplazar e ir al estado 24
    TOKEN_ARRAYS              desplazar e ir al estado 25
    TOKEN_IF                  desplazar e ir al estado 26
    TOKEN_SWITCH              desplazar e ir al estado 27
    TOKEN_BREAK               desplazar e ir al estado 28
    TOKEN_WHILE               desplazar e ir al estado 29
    TOKEN_FOR                 desplazar e ir al estado 30
    TOKEN_CONTINUE            desplazar e ir al estado 31
    TOKEN_RETURN              desplazar e ir al estado 32
    TOKEN_PUBLIC              desplazar e ir al estado 33
    TOKEN_REPEAT              desplazar e ir al estado 34
    '}'                       desplazar e ir al estado 301
    '('                       desplazar e ir al estado 35
    '{'                       desplazar e ir al estado 36

    comentario           ir al estado 116
    instruccion          ir al estado 117
    if_statement         ir al estado 40
    switch_statement     ir al estado 41
    while_statement      ir al estado 42
    for_statement        ir al estado 43
    repeat_statement     ir al estado 44
    break_statement      ir al estado 45
    continue_statement   ir al estado 46
    asignacion           ir al estado 47
    imprimir             ir al estado 48
    bloque               ir al estado 49
    declaracion_var      ir al estado 50
    array_decl_local     ir al estado 51
    var_decl             ir al estado 52
    final_var_decl       ir al estado 53
    asignacion_elemento  ir al estado 54
    postfix              ir al estado 55
    unary                ir al estado 56
    atom                 ir al estado 57
    primitivo            ir al estado 58
    tipoPrimitivo        ir al estado 59
    funcion_declaracion  ir al estado 60
    main_declaracion     ir al estado 61
    return_stmt          ir al estado 62
    for_each_statement   ir al estado 63
    llamada_funcion      ir al estado 64


Estado 267

  146 postfix: postfix • '[' expr ']'
  147        | postfix • '.' TOKEN_LENGTH
  148        | postfix • '.' TOKEN_ADD '(' expr ')'
  149        | postfix • '.' TOKEN_IDENTIFIER '(' expr ')'
  150        | postfix • '.' TOKEN_IDENTIFIER '(' ')'
  154 unary: '(' tipoPrimitivo ')' postfix •

    '.'  desplazar e ir al estado 122
    '['  desplazar e ir al estado 124

    '['       [reduce usando la regla 154 (unary)]
    $default  reduce usando la regla 154 (unary)


Estado 268

  149 postfix: postfix '.' TOKEN_IDENTIFIER '(' • expr ')'
  150        | postfix '.' TOKEN_IDENTIFIER '(' • ')'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35
    ')'                     desplazar e ir al estado 302

    expr             ir al estado 303
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 269

  148 postfix: postfix '.' TOKEN_ADD '(' • expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 304
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 270

  146 postfix: postfix '[' expr ']' •

    $default  reduce usando la regla 146 (postfix)


Estado 271

  196 lista_parametros: tipoPrimitivo • param_array_brackets TOKEN_IDENTIFIER

    $default  reduce usando la regla 194 (param_array_brackets)

    param_array_brackets  ir al estado 305


Estado 272

  182 funcion_declaracion: tipoPrimitivo TOKEN_IDENTIFIER '(' param_opt • ')' bloque

    ')'  desplazar e ir al estado 306


Estado 273

  193 param_opt: lista_parametros •
  197 lista_parametros: lista_parametros • ',' tipoPrimitivo param_array_brackets TOKEN_IDENTIFIER

    ','  desplazar e ir al estado 307

    $default  reduce usando la regla 193 (param_opt)


Estado 274

   98 var_decl: tipoPrimitivo TOKEN_IDENTIFIER '=' expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 98 (var_decl)


Estado 275

  183 funcion_declaracion: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '(' • param_opt ')' bloque

    TOKEN_DINT      desplazar e ir al estado 3
    TOKEN_DFLOAT    desplazar e ir al estado 4
    TOKEN_DDOUBLE   desplazar e ir al estado 5
    TOKEN_DSTRING   desplazar e ir al estado 86
    TOKEN_DBOOLEAN  desplazar e ir al estado 14
    TOKEN_DCHAR     desplazar e ir al estado 15
    TOKEN_DVOID     desplazar e ir al estado 20

    $default  reduce usando la regla 192 (param_opt)

    tipoPrimitivo     ir al estado 271
    param_opt         ir al estado 308
    lista_parametros  ir al estado 273


Estado 276

   91 array_decl_local: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' • TOKEN_NEW tipoPrimitivo dims_expr_list
   92                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' • '{' lista_Expr '}'
   93                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' • bloque2D
   94                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' • '{' lista_bloques2D '}'
   95                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' • expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    TOKEN_NEW               desplazar e ir al estado 309
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35
    '{'                     desplazar e ir al estado 310

    bloque2D         ir al estado 311
    expr             ir al estado 312
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 277

   97 brackets_seq: brackets_seq '[' ']' •

    $default  reduce usando la regla 97 (brackets_seq)


Estado 278

   78 lista_Expr: lista_Expr ',' expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 78 (lista_Expr)


Estado 279

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  163 atom: TOKEN_DSTRING '.' TOKEN_VALUE_OF '(' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ')'                  desplazar e ir al estado 313


Estado 280

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  164 atom: TOKEN_DSTRING '.' TOKEN_JOIN '(' expr • ',' expr ')'
  165     | TOKEN_DSTRING '.' TOKEN_JOIN '(' expr • ',' join_variadic_args ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ','                  desplazar e ir al estado 314


Estado 281

  100 final_var_decl: TOKEN_FINAL tipoPrimitivo TOKEN_IDENTIFIER '=' expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 100 (final_var_decl)


Estado 282

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  160 atom: TOKEN_INTEGER_CLASS '.' TOKEN_PARSE_INT '(' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ')'                  desplazar e ir al estado 315


Estado 283

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  161 atom: TOKEN_DOUBLE_CLASS '.' TOKEN_PARSE_DOUBLE '(' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ')'                  desplazar e ir al estado 316


Estado 284

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  162 atom: TOKEN_FLOAT_CLASS '.' TOKEN_PARSE_FLOAT '(' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ')'                  desplazar e ir al estado 317


Estado 285

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  159 atom: TOKEN_ARRAYS '.' TOKEN_INDEXOF '(' expr • ',' expr ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ','                  desplazar e ir al estado 318


Estado 286

   31 if_statement: TOKEN_IF '(' expr ')' instruccion_simple • ';'
   32             | TOKEN_IF '(' expr ')' instruccion_simple • ';' TOKEN_ELSE bloque
   33             | TOKEN_IF '(' expr ')' instruccion_simple • ';' TOKEN_ELSE if_statement

    ';'  desplazar e ir al estado 319


Estado 287

   66 instruccion_simple: asignacion •

    $default  reduce usando la regla 66 (instruccion_simple)


Estado 288

   64 instruccion_simple: imprimir •

    $default  reduce usando la regla 64 (instruccion_simple)


Estado 289

   28 if_statement: TOKEN_IF '(' expr ')' bloque •
   29             | TOKEN_IF '(' expr ')' bloque • TOKEN_ELSE bloque
   30             | TOKEN_IF '(' expr ')' bloque • TOKEN_ELSE if_statement

    TOKEN_ELSE  desplazar e ir al estado 320

    $default  reduce usando la regla 28 (if_statement)


Estado 290

   65 instruccion_simple: declaracion_var •

    $default  reduce usando la regla 65 (instruccion_simple)


Estado 291

   91 array_decl_local: tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '=' TOKEN_NEW tipoPrimitivo dims_expr_list
   92                 | tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '=' '{' lista_Expr '}'
   93                 | tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '=' bloque2D
   94                 | tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '=' '{' lista_bloques2D '}'
   95                 | tipoPrimitivo • brackets_seq TOKEN_IDENTIFIER '=' expr
   98 var_decl: tipoPrimitivo • TOKEN_IDENTIFIER '=' expr
   99         | tipoPrimitivo • TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  desplazar e ir al estado 321
    '['               desplazar e ir al estado 126

    brackets_seq  ir al estado 246


Estado 292

   34 switch_statement: TOKEN_SWITCH '(' expr ')' '{' • case_list '}'
   35                 | TOKEN_SWITCH '(' expr ')' '{' • case_list default_case '}'

    TOKEN_CASE  desplazar e ir al estado 322

    case_list    ir al estado 323
    case_labels  ir al estado 324
    case_item    ir al estado 325


Estado 293

   37 while_statement: TOKEN_WHILE '(' expr ')' instruccion_simple •

    $default  reduce usando la regla 37 (while_statement)


Estado 294

   36 while_statement: TOKEN_WHILE '(' expr ')' bloque •

    $default  reduce usando la regla 36 (while_statement)


Estado 295

   42 for_statement: TOKEN_FOR '(' asignacion ';' expr • ';' incremento ')' bloque
   43              | TOKEN_FOR '(' asignacion ';' expr • ';' incremento ')' instruccion_simple
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ';'                  desplazar e ir al estado 326


Estado 296

   38 for_statement: TOKEN_FOR '(' declaracion_var ';' expr • ';' incremento ')' bloque_for
   39              | TOKEN_FOR '(' declaracion_var ';' expr • ';' incremento ')' instruccion_simple
   40              | TOKEN_FOR '(' declaracion_var ';' expr • ';' ')' bloque_for
   41              | TOKEN_FOR '(' declaracion_var ';' expr • ';' ')' instruccion_simple
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ';'                  desplazar e ir al estado 327


Estado 297

  200 for_each_statement: TOKEN_FOR '(' tipoPrimitivo TOKEN_IDENTIFIER ':' • TOKEN_IDENTIFIER ')' bloque

    TOKEN_IDENTIFIER  desplazar e ir al estado 328


Estado 298

   96 brackets_seq: '[' ']' •
  201 for_each_statement: TOKEN_FOR '(' tipoPrimitivo '[' ']' • TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque

    TOKEN_IDENTIFIER  desplazar e ir al estado 329

    TOKEN_IDENTIFIER  [reduce usando la regla 96 (brackets_seq)]
    $default          reduce usando la regla 96 (brackets_seq)


Estado 299

   91 array_decl_local: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER • '=' TOKEN_NEW tipoPrimitivo dims_expr_list
   92                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER • '=' '{' lista_Expr '}'
   93                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER • '=' bloque2D
   94                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER • '=' '{' lista_bloques2D '}'
   95                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER • '=' expr

    '='  desplazar e ir al estado 276


Estado 300

  184 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC TOKEN_DVOID TOKEN_IDENTIFIER '(' • main_params_opt ')' bloque

    TOKEN_DINT      desplazar e ir al estado 3
    TOKEN_DFLOAT    desplazar e ir al estado 4
    TOKEN_DDOUBLE   desplazar e ir al estado 5
    TOKEN_DSTRING   desplazar e ir al estado 86
    TOKEN_DBOOLEAN  desplazar e ir al estado 14
    TOKEN_DCHAR     desplazar e ir al estado 15
    TOKEN_DVOID     desplazar e ir al estado 20

    $default  reduce usando la regla 185 (main_params_opt)

    tipoPrimitivo    ir al estado 330
    main_params_opt  ir al estado 331
    main_params      ir al estado 332
    main_param       ir al estado 333


Estado 301

   87 bloque_for: '{' lSentencia '}' •

    $default  reduce usando la regla 87 (bloque_for)


Estado 302

  150 postfix: postfix '.' TOKEN_IDENTIFIER '(' ')' •

    $default  reduce usando la regla 150 (postfix)


Estado 303

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  149 postfix: postfix '.' TOKEN_IDENTIFIER '(' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ')'                  desplazar e ir al estado 334


Estado 304

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  148 postfix: postfix '.' TOKEN_ADD '(' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ')'                  desplazar e ir al estado 335


Estado 305

  195 param_array_brackets: param_array_brackets • '[' ']'
  196 lista_parametros: tipoPrimitivo param_array_brackets • TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  desplazar e ir al estado 336
    '['               desplazar e ir al estado 337


Estado 306

  182 funcion_declaracion: tipoPrimitivo TOKEN_IDENTIFIER '(' param_opt ')' • bloque

    '{'  desplazar e ir al estado 36

    bloque  ir al estado 338


Estado 307

  197 lista_parametros: lista_parametros ',' • tipoPrimitivo param_array_brackets TOKEN_IDENTIFIER

    TOKEN_DINT      desplazar e ir al estado 3
    TOKEN_DFLOAT    desplazar e ir al estado 4
    TOKEN_DDOUBLE   desplazar e ir al estado 5
    TOKEN_DSTRING   desplazar e ir al estado 86
    TOKEN_DBOOLEAN  desplazar e ir al estado 14
    TOKEN_DCHAR     desplazar e ir al estado 15
    TOKEN_DVOID     desplazar e ir al estado 20

    tipoPrimitivo  ir al estado 339


Estado 308

  183 funcion_declaracion: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '(' param_opt • ')' bloque

    ')'  desplazar e ir al estado 340


Estado 309

   91 array_decl_local: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' TOKEN_NEW • tipoPrimitivo dims_expr_list

    TOKEN_DINT      desplazar e ir al estado 3
    TOKEN_DFLOAT    desplazar e ir al estado 4
    TOKEN_DDOUBLE   desplazar e ir al estado 5
    TOKEN_DSTRING   desplazar e ir al estado 86
    TOKEN_DBOOLEAN  desplazar e ir al estado 14
    TOKEN_DCHAR     desplazar e ir al estado 15
    TOKEN_DVOID     desplazar e ir al estado 20

    tipoPrimitivo  ir al estado 341


Estado 310

   92 array_decl_local: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' '{' • lista_Expr '}'
   94                 | tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' '{' • lista_bloques2D '}'
  105 bloque2D: '{' • filas_lista '}'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35
    '{'                     desplazar e ir al estado 342

    lista_Expr       ir al estado 343
    lista_bloques2D  ir al estado 344
    bloque2D         ir al estado 345
    filas_lista      ir al estado 346
    fila_matriz      ir al estado 347
    expr             ir al estado 130
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 311

   93 array_decl_local: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' bloque2D •

    $default  reduce usando la regla 93 (array_decl_local)


Estado 312

   95 array_decl_local: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' expr •
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196

    $default  reduce usando la regla 95 (array_decl_local)


Estado 313

  163 atom: TOKEN_DSTRING '.' TOKEN_VALUE_OF '(' expr ')' •

    $default  reduce usando la regla 163 (atom)


Estado 314

  164 atom: TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' • expr ')'
  165     | TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' • join_variadic_args ')'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr                ir al estado 348
    postfix             ir al estado 105
    unary               ir al estado 56
    atom                ir al estado 57
    join_variadic_args  ir al estado 349
    primitivo           ir al estado 58
    llamada_funcion     ir al estado 64


Estado 315

  160 atom: TOKEN_INTEGER_CLASS '.' TOKEN_PARSE_INT '(' expr ')' •

    $default  reduce usando la regla 160 (atom)


Estado 316

  161 atom: TOKEN_DOUBLE_CLASS '.' TOKEN_PARSE_DOUBLE '(' expr ')' •

    $default  reduce usando la regla 161 (atom)


Estado 317

  162 atom: TOKEN_FLOAT_CLASS '.' TOKEN_PARSE_FLOAT '(' expr ')' •

    $default  reduce usando la regla 162 (atom)


Estado 318

  159 atom: TOKEN_ARRAYS '.' TOKEN_INDEXOF '(' expr ',' • expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 350
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 319

   31 if_statement: TOKEN_IF '(' expr ')' instruccion_simple ';' •
   32             | TOKEN_IF '(' expr ')' instruccion_simple ';' • TOKEN_ELSE bloque
   33             | TOKEN_IF '(' expr ')' instruccion_simple ';' • TOKEN_ELSE if_statement

    TOKEN_ELSE  desplazar e ir al estado 351

    $default  reduce usando la regla 31 (if_statement)


Estado 320

   29 if_statement: TOKEN_IF '(' expr ')' bloque TOKEN_ELSE • bloque
   30             | TOKEN_IF '(' expr ')' bloque TOKEN_ELSE • if_statement

    TOKEN_IF  desplazar e ir al estado 26
    '{'       desplazar e ir al estado 36

    if_statement  ir al estado 352
    bloque        ir al estado 353


Estado 321

   98 var_decl: tipoPrimitivo TOKEN_IDENTIFIER • '=' expr
   99         | tipoPrimitivo TOKEN_IDENTIFIER •

    '='  desplazar e ir al estado 210

    $default  reduce usando la regla 99 (var_decl)


Estado 322

   50 case_labels: TOKEN_CASE • expr ':'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 354
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 323

   34 switch_statement: TOKEN_SWITCH '(' expr ')' '{' case_list • '}'
   35                 | TOKEN_SWITCH '(' expr ')' '{' case_list • default_case '}'
   49 case_list: case_list • case_item

    TOKEN_CASE     desplazar e ir al estado 322
    TOKEN_DEFAULT  desplazar e ir al estado 355
    '}'            desplazar e ir al estado 356

    case_labels   ir al estado 324
    case_item     ir al estado 357
    default_case  ir al estado 358


Estado 324

   51 case_labels: case_labels • TOKEN_CASE expr ':'
   52 case_item: case_labels • instrucciones_case
   53          | case_labels • instrucciones_case TOKEN_BREAK ';'

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 173
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_SYSTEM_OUT_PRINT    desplazar e ir al estado 19
    TOKEN_DVOID               desplazar e ir al estado 20
    TOKEN_CASE                desplazar e ir al estado 359
    '{'                       desplazar e ir al estado 36

    instrucciones_case  ir al estado 360
    instruccion_case    ir al estado 361
    asignacion          ir al estado 362
    imprimir            ir al estado 363
    bloque              ir al estado 364
    declaracion_var     ir al estado 365
    array_decl_local    ir al estado 51
    var_decl            ir al estado 52
    final_var_decl      ir al estado 53
    tipoPrimitivo       ir al estado 291


Estado 325

   48 case_list: case_item •

    $default  reduce usando la regla 48 (case_list)


Estado 326

   42 for_statement: TOKEN_FOR '(' asignacion ';' expr ';' • incremento ')' bloque
   43              | TOKEN_FOR '(' asignacion ';' expr ';' • incremento ')' instruccion_simple

    TOKEN_IDENTIFIER  desplazar e ir al estado 366

    incremento  ir al estado 367
    asignacion  ir al estado 368


Estado 327

   38 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' • incremento ')' bloque_for
   39              | TOKEN_FOR '(' declaracion_var ';' expr ';' • incremento ')' instruccion_simple
   40              | TOKEN_FOR '(' declaracion_var ';' expr ';' • ')' bloque_for
   41              | TOKEN_FOR '(' declaracion_var ';' expr ';' • ')' instruccion_simple

    TOKEN_IDENTIFIER  desplazar e ir al estado 366
    ')'               desplazar e ir al estado 369

    incremento  ir al estado 370
    asignacion  ir al estado 368


Estado 328

  200 for_each_statement: TOKEN_FOR '(' tipoPrimitivo TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER • ')' bloque

    ')'  desplazar e ir al estado 371


Estado 329

  201 for_each_statement: TOKEN_FOR '(' tipoPrimitivo '[' ']' TOKEN_IDENTIFIER • ':' TOKEN_IDENTIFIER ')' bloque

    ':'  desplazar e ir al estado 372


Estado 330

  189 main_param: tipoPrimitivo • main_param_array_brackets TOKEN_IDENTIFIER

    $default  reduce usando la regla 190 (main_param_array_brackets)

    main_param_array_brackets  ir al estado 373


Estado 331

  184 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC TOKEN_DVOID TOKEN_IDENTIFIER '(' main_params_opt • ')' bloque

    ')'  desplazar e ir al estado 374


Estado 332

  186 main_params_opt: main_params •
  188 main_params: main_params • ',' main_param

    ','  desplazar e ir al estado 375

    $default  reduce usando la regla 186 (main_params_opt)


Estado 333

  187 main_params: main_param •

    $default  reduce usando la regla 187 (main_params)


Estado 334

  149 postfix: postfix '.' TOKEN_IDENTIFIER '(' expr ')' •

    $default  reduce usando la regla 149 (postfix)


Estado 335

  148 postfix: postfix '.' TOKEN_ADD '(' expr ')' •

    $default  reduce usando la regla 148 (postfix)


Estado 336

  196 lista_parametros: tipoPrimitivo param_array_brackets TOKEN_IDENTIFIER •

    $default  reduce usando la regla 196 (lista_parametros)


Estado 337

  195 param_array_brackets: param_array_brackets '[' • ']'

    ']'  desplazar e ir al estado 376


Estado 338

  182 funcion_declaracion: tipoPrimitivo TOKEN_IDENTIFIER '(' param_opt ')' bloque •

    $default  reduce usando la regla 182 (funcion_declaracion)


Estado 339

  197 lista_parametros: lista_parametros ',' tipoPrimitivo • param_array_brackets TOKEN_IDENTIFIER

    $default  reduce usando la regla 194 (param_array_brackets)

    param_array_brackets  ir al estado 377


Estado 340

  183 funcion_declaracion: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '(' param_opt ')' • bloque

    '{'  desplazar e ir al estado 36

    bloque  ir al estado 378


Estado 341

   91 array_decl_local: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' TOKEN_NEW tipoPrimitivo • dims_expr_list

    '['  desplazar e ir al estado 379

    dims_expr_list  ir al estado 380


Estado 342

  105 bloque2D: '{' • filas_lista '}'
  108 fila_matriz: '{' • lista_Expr '}'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35
    '{'                     desplazar e ir al estado 381

    lista_Expr       ir al estado 382
    filas_lista      ir al estado 346
    fila_matriz      ir al estado 347
    expr             ir al estado 130
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 343

   78 lista_Expr: lista_Expr • ',' expr
   92 array_decl_local: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' '{' lista_Expr • '}'

    '}'  desplazar e ir al estado 383
    ','  desplazar e ir al estado 215


Estado 344

   94 array_decl_local: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' '{' lista_bloques2D • '}'
  104 lista_bloques2D: lista_bloques2D • ',' bloque2D

    '}'  desplazar e ir al estado 384
    ','  desplazar e ir al estado 385


Estado 345

  103 lista_bloques2D: bloque2D •

    $default  reduce usando la regla 103 (lista_bloques2D)


Estado 346

  105 bloque2D: '{' filas_lista • '}'
  107 filas_lista: filas_lista • ',' fila_matriz

    '}'  desplazar e ir al estado 386
    ','  desplazar e ir al estado 387


Estado 347

  106 filas_lista: fila_matriz •

    $default  reduce usando la regla 106 (filas_lista)


Estado 348

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  164 atom: TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' expr • ')'
  166 join_variadic_args: expr • ',' lista_Expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ')'                  desplazar e ir al estado 388
    ','                  desplazar e ir al estado 389


Estado 349

  165 atom: TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' join_variadic_args • ')'

    ')'  desplazar e ir al estado 390


Estado 350

  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr
  159 atom: TOKEN_ARRAYS '.' TOKEN_INDEXOF '(' expr ',' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ')'                  desplazar e ir al estado 391


Estado 351

   32 if_statement: TOKEN_IF '(' expr ')' instruccion_simple ';' TOKEN_ELSE • bloque
   33             | TOKEN_IF '(' expr ')' instruccion_simple ';' TOKEN_ELSE • if_statement

    TOKEN_IF  desplazar e ir al estado 26
    '{'       desplazar e ir al estado 36

    if_statement  ir al estado 392
    bloque        ir al estado 393


Estado 352

   30 if_statement: TOKEN_IF '(' expr ')' bloque TOKEN_ELSE if_statement •

    $default  reduce usando la regla 30 (if_statement)


Estado 353

   29 if_statement: TOKEN_IF '(' expr ')' bloque TOKEN_ELSE bloque •

    $default  reduce usando la regla 29 (if_statement)


Estado 354

   50 case_labels: TOKEN_CASE expr • ':'
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ':'                  desplazar e ir al estado 394


Estado 355

   60 default_case: TOKEN_DEFAULT • ':' instrucciones_case
   61             | TOKEN_DEFAULT • ':' instrucciones_case TOKEN_BREAK ';'

    ':'  desplazar e ir al estado 395


Estado 356

   34 switch_statement: TOKEN_SWITCH '(' expr ')' '{' case_list '}' •

    $default  reduce usando la regla 34 (switch_statement)


Estado 357

   49 case_list: case_list case_item •

    $default  reduce usando la regla 49 (case_list)


Estado 358

   35 switch_statement: TOKEN_SWITCH '(' expr ')' '{' case_list default_case • '}'

    '}'  desplazar e ir al estado 396


Estado 359

   51 case_labels: case_labels TOKEN_CASE • expr ':'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 397
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 360

   52 case_item: case_labels instrucciones_case •
   53          | case_labels instrucciones_case • TOKEN_BREAK ';'
   55 instrucciones_case: instrucciones_case • instruccion_case

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 173
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_SYSTEM_OUT_PRINT    desplazar e ir al estado 19
    TOKEN_DVOID               desplazar e ir al estado 20
    TOKEN_BREAK               desplazar e ir al estado 398
    '{'                       desplazar e ir al estado 36

    $default  reduce usando la regla 52 (case_item)

    instruccion_case  ir al estado 399
    asignacion        ir al estado 362
    imprimir          ir al estado 363
    bloque            ir al estado 364
    declaracion_var   ir al estado 365
    array_decl_local  ir al estado 51
    var_decl          ir al estado 52
    final_var_decl    ir al estado 53
    tipoPrimitivo     ir al estado 291


Estado 361

   54 instrucciones_case: instruccion_case •

    $default  reduce usando la regla 54 (instrucciones_case)


Estado 362

   59 instruccion_case: asignacion • ';'

    ';'  desplazar e ir al estado 400


Estado 363

   56 instruccion_case: imprimir • ';'

    ';'  desplazar e ir al estado 401


Estado 364

   57 instruccion_case: bloque •

    $default  reduce usando la regla 57 (instruccion_case)


Estado 365

   58 instruccion_case: declaracion_var • ';'

    ';'  desplazar e ir al estado 402


Estado 366

   46 incremento: TOKEN_IDENTIFIER • TOKEN_PLUS_PLUS
   47           | TOKEN_IDENTIFIER • TOKEN_MINUS_MINUS
   67 asignacion: TOKEN_IDENTIFIER • '=' expr
   68           | TOKEN_IDENTIFIER • TOKEN_PLUS_ASSIGN expr
   69           | TOKEN_IDENTIFIER • TOKEN_MINUS_ASSIGN expr
   70           | TOKEN_IDENTIFIER • TOKEN_MUL_ASSIGN expr
   71           | TOKEN_IDENTIFIER • TOKEN_DIV_ASSIGN expr
   72           | TOKEN_IDENTIFIER • TOKEN_MOD_ASSIGN expr
   73           | TOKEN_IDENTIFIER • TOKEN_AND_ASSIGN expr
   74           | TOKEN_IDENTIFIER • TOKEN_OR_ASSIGN expr
   75           | TOKEN_IDENTIFIER • TOKEN_XOR_ASSIGN expr
   76           | TOKEN_IDENTIFIER • TOKEN_SHL_ASSIGN expr
   77           | TOKEN_IDENTIFIER • TOKEN_SHR_ASSIGN expr

    TOKEN_PLUS_PLUS     desplazar e ir al estado 403
    TOKEN_MINUS_MINUS   desplazar e ir al estado 404
    TOKEN_PLUS_ASSIGN   desplazar e ir al estado 71
    TOKEN_MINUS_ASSIGN  desplazar e ir al estado 72
    TOKEN_MUL_ASSIGN    desplazar e ir al estado 73
    TOKEN_DIV_ASSIGN    desplazar e ir al estado 74
    TOKEN_MOD_ASSIGN    desplazar e ir al estado 75
    TOKEN_AND_ASSIGN    desplazar e ir al estado 76
    TOKEN_OR_ASSIGN     desplazar e ir al estado 77
    TOKEN_XOR_ASSIGN    desplazar e ir al estado 78
    TOKEN_SHL_ASSIGN    desplazar e ir al estado 79
    TOKEN_SHR_ASSIGN    desplazar e ir al estado 80
    '='                 desplazar e ir al estado 82


Estado 367

   42 for_statement: TOKEN_FOR '(' asignacion ';' expr ';' incremento • ')' bloque
   43              | TOKEN_FOR '(' asignacion ';' expr ';' incremento • ')' instruccion_simple

    ')'  desplazar e ir al estado 405


Estado 368

   45 incremento: asignacion •

    $default  reduce usando la regla 45 (incremento)


Estado 369

   40 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' ')' • bloque_for
   41              | TOKEN_FOR '(' declaracion_var ';' expr ';' ')' • instruccion_simple

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 173
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_SYSTEM_OUT_PRINT    desplazar e ir al estado 19
    TOKEN_DVOID               desplazar e ir al estado 20
    '{'                       desplazar e ir al estado 198

    instruccion_simple  ir al estado 406
    asignacion          ir al estado 287
    imprimir            ir al estado 288
    bloque_for          ir al estado 407
    declaracion_var     ir al estado 290
    array_decl_local    ir al estado 51
    var_decl            ir al estado 52
    final_var_decl      ir al estado 53
    tipoPrimitivo       ir al estado 291


Estado 370

   38 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' incremento • ')' bloque_for
   39              | TOKEN_FOR '(' declaracion_var ';' expr ';' incremento • ')' instruccion_simple

    ')'  desplazar e ir al estado 408


Estado 371

  200 for_each_statement: TOKEN_FOR '(' tipoPrimitivo TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' • bloque

    '{'  desplazar e ir al estado 36

    bloque  ir al estado 409


Estado 372

  201 for_each_statement: TOKEN_FOR '(' tipoPrimitivo '[' ']' TOKEN_IDENTIFIER ':' • TOKEN_IDENTIFIER ')' bloque

    TOKEN_IDENTIFIER  desplazar e ir al estado 410


Estado 373

  189 main_param: tipoPrimitivo main_param_array_brackets • TOKEN_IDENTIFIER
  191 main_param_array_brackets: main_param_array_brackets • '[' ']'

    TOKEN_IDENTIFIER  desplazar e ir al estado 411
    '['               desplazar e ir al estado 412


Estado 374

  184 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC TOKEN_DVOID TOKEN_IDENTIFIER '(' main_params_opt ')' • bloque

    '{'  desplazar e ir al estado 36

    bloque  ir al estado 413


Estado 375

  188 main_params: main_params ',' • main_param

    TOKEN_DINT      desplazar e ir al estado 3
    TOKEN_DFLOAT    desplazar e ir al estado 4
    TOKEN_DDOUBLE   desplazar e ir al estado 5
    TOKEN_DSTRING   desplazar e ir al estado 86
    TOKEN_DBOOLEAN  desplazar e ir al estado 14
    TOKEN_DCHAR     desplazar e ir al estado 15
    TOKEN_DVOID     desplazar e ir al estado 20

    tipoPrimitivo  ir al estado 330
    main_param     ir al estado 414


Estado 376

  195 param_array_brackets: param_array_brackets '[' ']' •

    $default  reduce usando la regla 195 (param_array_brackets)


Estado 377

  195 param_array_brackets: param_array_brackets • '[' ']'
  197 lista_parametros: lista_parametros ',' tipoPrimitivo param_array_brackets • TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  desplazar e ir al estado 415
    '['               desplazar e ir al estado 337


Estado 378

  183 funcion_declaracion: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '(' param_opt ')' bloque •

    $default  reduce usando la regla 183 (funcion_declaracion)


Estado 379

  101 dims_expr_list: '[' • expr ']'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 416
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 380

   91 array_decl_local: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' TOKEN_NEW tipoPrimitivo dims_expr_list •
  102 dims_expr_list: dims_expr_list • '[' expr ']'

    '['  desplazar e ir al estado 417

    $default  reduce usando la regla 91 (array_decl_local)


Estado 381

  108 fila_matriz: '{' • lista_Expr '}'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    lista_Expr       ir al estado 382
    expr             ir al estado 130
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 382

   78 lista_Expr: lista_Expr • ',' expr
  108 fila_matriz: '{' lista_Expr • '}'

    '}'  desplazar e ir al estado 418
    ','  desplazar e ir al estado 215


Estado 383

   92 array_decl_local: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' '{' lista_Expr '}' •

    $default  reduce usando la regla 92 (array_decl_local)


Estado 384

   94 array_decl_local: tipoPrimitivo brackets_seq TOKEN_IDENTIFIER '=' '{' lista_bloques2D '}' •

    $default  reduce usando la regla 94 (array_decl_local)


Estado 385

  104 lista_bloques2D: lista_bloques2D ',' • bloque2D

    '{'  desplazar e ir al estado 419

    bloque2D  ir al estado 420


Estado 386

  105 bloque2D: '{' filas_lista '}' •

    $default  reduce usando la regla 105 (bloque2D)


Estado 387

  107 filas_lista: filas_lista ',' • fila_matriz

    '{'  desplazar e ir al estado 381

    fila_matriz  ir al estado 421


Estado 388

  164 atom: TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' expr ')' •

    $default  reduce usando la regla 164 (atom)


Estado 389

  166 join_variadic_args: expr ',' • lista_Expr

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    lista_Expr       ir al estado 422
    expr             ir al estado 130
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 390

  165 atom: TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' join_variadic_args ')' •

    $default  reduce usando la regla 165 (atom)


Estado 391

  159 atom: TOKEN_ARRAYS '.' TOKEN_INDEXOF '(' expr ',' expr ')' •

    $default  reduce usando la regla 159 (atom)


Estado 392

   33 if_statement: TOKEN_IF '(' expr ')' instruccion_simple ';' TOKEN_ELSE if_statement •

    $default  reduce usando la regla 33 (if_statement)


Estado 393

   32 if_statement: TOKEN_IF '(' expr ')' instruccion_simple ';' TOKEN_ELSE bloque •

    $default  reduce usando la regla 32 (if_statement)


Estado 394

   50 case_labels: TOKEN_CASE expr ':' •

    $default  reduce usando la regla 50 (case_labels)


Estado 395

   60 default_case: TOKEN_DEFAULT ':' • instrucciones_case
   61             | TOKEN_DEFAULT ':' • instrucciones_case TOKEN_BREAK ';'

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 173
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_SYSTEM_OUT_PRINT    desplazar e ir al estado 19
    TOKEN_DVOID               desplazar e ir al estado 20
    '{'                       desplazar e ir al estado 36

    instrucciones_case  ir al estado 423
    instruccion_case    ir al estado 361
    asignacion          ir al estado 362
    imprimir            ir al estado 363
    bloque              ir al estado 364
    declaracion_var     ir al estado 365
    array_decl_local    ir al estado 51
    var_decl            ir al estado 52
    final_var_decl      ir al estado 53
    tipoPrimitivo       ir al estado 291


Estado 396

   35 switch_statement: TOKEN_SWITCH '(' expr ')' '{' case_list default_case '}' •

    $default  reduce usando la regla 35 (switch_statement)


Estado 397

   51 case_labels: case_labels TOKEN_CASE expr • ':'
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ':'                  desplazar e ir al estado 424


Estado 398

   53 case_item: case_labels instrucciones_case TOKEN_BREAK • ';'

    ';'  desplazar e ir al estado 425


Estado 399

   55 instrucciones_case: instrucciones_case instruccion_case •

    $default  reduce usando la regla 55 (instrucciones_case)


Estado 400

   59 instruccion_case: asignacion ';' •

    $default  reduce usando la regla 59 (instruccion_case)


Estado 401

   56 instruccion_case: imprimir ';' •

    $default  reduce usando la regla 56 (instruccion_case)


Estado 402

   58 instruccion_case: declaracion_var ';' •

    $default  reduce usando la regla 58 (instruccion_case)


Estado 403

   46 incremento: TOKEN_IDENTIFIER TOKEN_PLUS_PLUS •

    $default  reduce usando la regla 46 (incremento)


Estado 404

   47 incremento: TOKEN_IDENTIFIER TOKEN_MINUS_MINUS •

    $default  reduce usando la regla 47 (incremento)


Estado 405

   42 for_statement: TOKEN_FOR '(' asignacion ';' expr ';' incremento ')' • bloque
   43              | TOKEN_FOR '(' asignacion ';' expr ';' incremento ')' • instruccion_simple

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 173
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_SYSTEM_OUT_PRINT    desplazar e ir al estado 19
    TOKEN_DVOID               desplazar e ir al estado 20
    '{'                       desplazar e ir al estado 36

    instruccion_simple  ir al estado 426
    asignacion          ir al estado 287
    imprimir            ir al estado 288
    bloque              ir al estado 427
    declaracion_var     ir al estado 290
    array_decl_local    ir al estado 51
    var_decl            ir al estado 52
    final_var_decl      ir al estado 53
    tipoPrimitivo       ir al estado 291


Estado 406

   41 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' ')' instruccion_simple •

    $default  reduce usando la regla 41 (for_statement)


Estado 407

   40 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' ')' bloque_for •

    $default  reduce usando la regla 40 (for_statement)


Estado 408

   38 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' incremento ')' • bloque_for
   39              | TOKEN_FOR '(' declaracion_var ';' expr ';' incremento ')' • instruccion_simple

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 173
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_SYSTEM_OUT_PRINT    desplazar e ir al estado 19
    TOKEN_DVOID               desplazar e ir al estado 20
    '{'                       desplazar e ir al estado 198

    instruccion_simple  ir al estado 428
    asignacion          ir al estado 287
    imprimir            ir al estado 288
    bloque_for          ir al estado 429
    declaracion_var     ir al estado 290
    array_decl_local    ir al estado 51
    var_decl            ir al estado 52
    final_var_decl      ir al estado 53
    tipoPrimitivo       ir al estado 291


Estado 409

  200 for_each_statement: TOKEN_FOR '(' tipoPrimitivo TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque •

    $default  reduce usando la regla 200 (for_each_statement)


Estado 410

  201 for_each_statement: TOKEN_FOR '(' tipoPrimitivo '[' ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER • ')' bloque

    ')'  desplazar e ir al estado 430


Estado 411

  189 main_param: tipoPrimitivo main_param_array_brackets TOKEN_IDENTIFIER •

    $default  reduce usando la regla 189 (main_param)


Estado 412

  191 main_param_array_brackets: main_param_array_brackets '[' • ']'

    ']'  desplazar e ir al estado 431


Estado 413

  184 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC TOKEN_DVOID TOKEN_IDENTIFIER '(' main_params_opt ')' bloque •

    $default  reduce usando la regla 184 (main_declaracion)


Estado 414

  188 main_params: main_params ',' main_param •

    $default  reduce usando la regla 188 (main_params)


Estado 415

  197 lista_parametros: lista_parametros ',' tipoPrimitivo param_array_brackets TOKEN_IDENTIFIER •

    $default  reduce usando la regla 197 (lista_parametros)


Estado 416

  101 dims_expr_list: '[' expr • ']'
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ']'                  desplazar e ir al estado 432


Estado 417

  102 dims_expr_list: dims_expr_list '[' • expr ']'

    TOKEN_DSTRING           desplazar e ir al estado 100
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 101
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 21
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 22
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 23
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 24
    TOKEN_ARRAYS            desplazar e ir al estado 25
    TOKEN_NOT               desplazar e ir al estado 102
    '-'                     desplazar e ir al estado 103
    '('                     desplazar e ir al estado 35

    expr             ir al estado 433
    postfix          ir al estado 105
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 418

  108 fila_matriz: '{' lista_Expr '}' •

    $default  reduce usando la regla 108 (fila_matriz)


Estado 419

  105 bloque2D: '{' • filas_lista '}'

    '{'  desplazar e ir al estado 381

    filas_lista  ir al estado 346
    fila_matriz  ir al estado 347


Estado 420

  104 lista_bloques2D: lista_bloques2D ',' bloque2D •

    $default  reduce usando la regla 104 (lista_bloques2D)


Estado 421

  107 filas_lista: filas_lista ',' fila_matriz •

    $default  reduce usando la regla 107 (filas_lista)


Estado 422

   78 lista_Expr: lista_Expr • ',' expr
  166 join_variadic_args: expr ',' lista_Expr •

    ','  desplazar e ir al estado 215

    $default  reduce usando la regla 166 (join_variadic_args)


Estado 423

   55 instrucciones_case: instrucciones_case • instruccion_case
   60 default_case: TOKEN_DEFAULT ':' instrucciones_case •
   61             | TOKEN_DEFAULT ':' instrucciones_case • TOKEN_BREAK ';'

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 173
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_SYSTEM_OUT_PRINT    desplazar e ir al estado 19
    TOKEN_DVOID               desplazar e ir al estado 20
    TOKEN_BREAK               desplazar e ir al estado 434
    '{'                       desplazar e ir al estado 36

    $default  reduce usando la regla 60 (default_case)

    instruccion_case  ir al estado 399
    asignacion        ir al estado 362
    imprimir          ir al estado 363
    bloque            ir al estado 364
    declaracion_var   ir al estado 365
    array_decl_local  ir al estado 51
    var_decl          ir al estado 52
    final_var_decl    ir al estado 53
    tipoPrimitivo     ir al estado 291


Estado 424

   51 case_labels: case_labels TOKEN_CASE expr ':' •

    $default  reduce usando la regla 51 (case_labels)


Estado 425

   53 case_item: case_labels instrucciones_case TOKEN_BREAK ';' •

    $default  reduce usando la regla 53 (case_item)


Estado 426

   43 for_statement: TOKEN_FOR '(' asignacion ';' expr ';' incremento ')' instruccion_simple •

    $default  reduce usando la regla 43 (for_statement)


Estado 427

   42 for_statement: TOKEN_FOR '(' asignacion ';' expr ';' incremento ')' bloque •

    $default  reduce usando la regla 42 (for_statement)


Estado 428

   39 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' incremento ')' instruccion_simple •

    $default  reduce usando la regla 39 (for_statement)


Estado 429

   38 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' incremento ')' bloque_for •

    $default  reduce usando la regla 38 (for_statement)


Estado 430

  201 for_each_statement: TOKEN_FOR '(' tipoPrimitivo '[' ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' • bloque

    '{'  desplazar e ir al estado 36

    bloque  ir al estado 435


Estado 431

  191 main_param_array_brackets: main_param_array_brackets '[' ']' •

    $default  reduce usando la regla 191 (main_param_array_brackets)


Estado 432

  101 dims_expr_list: '[' expr ']' •

    $default  reduce usando la regla 101 (dims_expr_list)


Estado 433

  102 dims_expr_list: dims_expr_list '[' expr • ']'
  124 expr: expr • '+' expr
  125     | expr • '-' expr
  126     | expr • '*' expr
  127     | expr • '/' expr
  128     | expr • '%' expr
  129     | expr • '&' expr
  130     | expr • '|' expr
  131     | expr • '^' expr
  132     | expr • TOKEN_SHIFT_LEFT expr
  133     | expr • TOKEN_SHIFT_RIGHT expr
  134     | expr • TOKEN_EQUAL expr
  135     | expr • TOKEN_NOT_EQUAL expr
  136     | expr • TOKEN_GREATER expr
  137     | expr • TOKEN_LESS expr
  138     | expr • TOKEN_GREATER_EQUAL expr
  139     | expr • TOKEN_LESS_EQUAL expr
  140     | expr • TOKEN_AND expr
  141     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 179
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 180
    TOKEN_EQUAL          desplazar e ir al estado 181
    TOKEN_NOT_EQUAL      desplazar e ir al estado 182
    TOKEN_GREATER        desplazar e ir al estado 183
    TOKEN_LESS           desplazar e ir al estado 184
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 185
    TOKEN_LESS_EQUAL     desplazar e ir al estado 186
    TOKEN_AND            desplazar e ir al estado 187
    TOKEN_OR             desplazar e ir al estado 188
    '+'                  desplazar e ir al estado 189
    '-'                  desplazar e ir al estado 190
    '&'                  desplazar e ir al estado 191
    '^'                  desplazar e ir al estado 192
    '|'                  desplazar e ir al estado 193
    '*'                  desplazar e ir al estado 194
    '/'                  desplazar e ir al estado 195
    '%'                  desplazar e ir al estado 196
    ']'                  desplazar e ir al estado 436


Estado 434

   61 default_case: TOKEN_DEFAULT ':' instrucciones_case TOKEN_BREAK • ';'

    ';'  desplazar e ir al estado 437


Estado 435

  201 for_each_statement: TOKEN_FOR '(' tipoPrimitivo '[' ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque •

    $default  reduce usando la regla 201 (for_each_statement)


Estado 436

  102 dims_expr_list: dims_expr_list '[' expr ']' •

    $default  reduce usando la regla 102 (dims_expr_list)


Estado 437

   61 default_case: TOKEN_DEFAULT ':' instrucciones_case TOKEN_BREAK ';' •

    $default  reduce usando la regla 61 (default_case)
